/*<simulation_settings>
<ftestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=verilog --write_settings_files=off alu -c alu --vector_source="C:/Users/20112/Desktop/Projects/LabsQ/Waveform13.vwf" --testbench_file="C:/Users/20112/Desktop/Projects/LabsQ/simulation/qsim/Waveform13.vwf.vt"</ftestbench_cmd>
<ttestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=verilog --write_settings_files=off alu -c alu --vector_source="C:/Users/20112/Desktop/Projects/LabsQ/Waveform13.vwf" --testbench_file="C:/Users/20112/Desktop/Projects/LabsQ/simulation/qsim/Waveform13.vwf.vt"</ttestbench_cmd>
<fnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=on --flatten_buses=off --tool=modelsim_oem --format=verilog --output_directory="C:/Users/20112/Desktop/Projects/LabsQ/simulation/qsim/" alu -c alu</fnetlist_cmd>
<tnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=off --flatten_buses=off --timescale=1ps --tool=modelsim_oem --format=verilog --output_directory="C:/Users/20112/Desktop/Projects/LabsQ/simulation/qsim/" alu -c alu</tnetlist_cmd>
<modelsim_script>onerror {exit -code 1}
vlib work
vlog -work work alu.vo
vlog -work work Waveform13.vwf.vt
vsim -c -t 1ps -L cyclonev_ver -L altera_ver -L altera_mf_ver -L 220model_ver -L sgate_ver -L altera_lnsim_ver work.Block2a_vlg_vec_tst
vcd file -direction alu.msim.vcd
vcd add -internal Block2a_vlg_vec_tst/*
vcd add -internal Block2a_vlg_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f
</modelsim_script>
<modelsim_script_timing>onerror {exit -code 1}
vlib work
vlog -work work alu.vo
vlog -work work Waveform13.vwf.vt
vsim -novopt -c -t 1ps -L cyclonev_ver -L altera_ver -L altera_mf_ver -L 220model_ver -L sgate_ver -L altera_lnsim_ver work.Block2a_vlg_vec_tst
vcd file -direction alu.msim.vcd
vcd add -internal Block2a_vlg_vec_tst/*
vcd add -internal Block2a_vlg_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f
</modelsim_script_timing>
<hdl_lang>verilog</hdl_lang>
</simulation_settings>*/
/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2020  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("IN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("IN[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "IN";
}

SIGNAL("IN[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "IN";
}

SIGNAL("IN[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "IN";
}

SIGNAL("IN[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "IN";
}

SIGNAL("Operandtwo")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Operandtwo[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Operandtwo";
}

SIGNAL("Operandtwo[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Operandtwo";
}

SIGNAL("Operandtwo[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Operandtwo";
}

SIGNAL("Operandtwo[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Operandtwo";
}

SIGNAL("Opernadone")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Opernadone[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Opernadone";
}

SIGNAL("Opernadone[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Opernadone";
}

SIGNAL("Opernadone[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Opernadone";
}

SIGNAL("Opernadone[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Opernadone";
}

SIGNAL("ORA")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ORA[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ORA";
}

SIGNAL("ORA[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ORA";
}

SIGNAL("ORA[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ORA";
}

SIGNAL("ORA[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ORA";
}

SIGNAL("ORB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ORB[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ORB";
}

SIGNAL("ORB[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ORB";
}

SIGNAL("ORB[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ORB";
}

SIGNAL("ORB[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ORB";
}

SIGNAL("ORC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ORC[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ORC";
}

SIGNAL("ORC[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ORC";
}

SIGNAL("ORC[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ORC";
}

SIGNAL("ORC[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ORC";
}

SIGNAL("Sone")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Sone[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Sone";
}

SIGNAL("Sone[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Sone";
}

SIGNAL("Stwo")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Stwo[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Stwo";
}

SIGNAL("Stwo[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Stwo";
}

SIGNAL("V")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("V[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "V";
}

SIGNAL("V[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "V";
}

SIGNAL("V[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "V";
}

SIGNAL("V[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "V";
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("IN[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.266;
		LEVEL 1 FOR 3.066;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.6;
			LEVEL 1 FOR 3.066;
		}
		LEVEL 0 FOR 3.336;
		LEVEL 1 FOR 0.389;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.867;
			LEVEL 1 FOR 2.799;
		}
		LEVEL 0 FOR 3.867;
		LEVEL 1 FOR 4.123;
		LEVEL 0 FOR 5.4;
		LEVEL 1 FOR 4.6;
		LEVEL 0 FOR 5.4;
		LEVEL 1 FOR 3.728;
		LEVEL 0 FOR 12.6;
		LEVEL 1 FOR 9.01;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.666;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.666;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 0.219;
		LEVEL 0 FOR 1.244;
		LEVEL 1 FOR 1.8;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 1.8;
		}
		LEVEL 0 FOR 2.506;
		LEVEL 1 FOR 1.733;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.6;
			LEVEL 1 FOR 1.733;
		}
		LEVEL 0 FOR 1.051;
		LEVEL 1 FOR 0.685;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.267;
			LEVEL 1 FOR 1.066;
		}
		LEVEL 0 FOR 2.267;
		LEVEL 1 FOR 0.382;
		LEVEL 0 FOR 2.668;
		LEVEL 1 FOR 3.932;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.734;
			LEVEL 1 FOR 3.932;
		}
		LEVEL 0 FOR 0.068;
		LEVEL 1 FOR 2.521;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.5;
			LEVEL 1 FOR 5.5;
		}
		LEVEL 0 FOR 4.5;
		LEVEL 1 FOR 11.181;
		LEVEL 0 FOR 11.4;
		LEVEL 1 FOR 0.398;
		LEVEL 0 FOR 0.256;
		LEVEL 1 FOR 1.333;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 1.333;
		}
		LEVEL 0 FOR 12.601;
		LEVEL 1 FOR 8.8;
		LEVEL 0 FOR 0.344;
		LEVEL 1 FOR 0.092;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.967;
			LEVEL 1 FOR 1.366;
		}
		LEVEL 0 FOR 1.967;
		LEVEL 1 FOR 2.1;
		LEVEL 0 FOR 3.267;
		LEVEL 1 FOR 3.399;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.267;
			LEVEL 1 FOR 3.399;
		}
		LEVEL 0 FOR 3.267;
		LEVEL 1 FOR 2.576;
		LEVEL 0 FOR 1.179;
		LEVEL 1 FOR 3.4;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.6;
			LEVEL 1 FOR 3.4;
		}
		LEVEL 0 FOR 5.612;
		LEVEL 1 FOR 1.933;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.4;
			LEVEL 1 FOR 1.933;
		}
		LEVEL 0 FOR 1.21;
		LEVEL 1 FOR 0.696;
		LEVEL 0 FOR 6.9;
		LEVEL 1 FOR 3.266;
		LEVEL 0 FOR 5.2;
		LEVEL 1 FOR 3.938;
		LEVEL 0 FOR 2.758;
		LEVEL 1 FOR 4.9;
		LEVEL 0 FOR 2.342;
		LEVEL 1 FOR 2.132;
		LEVEL 0 FOR 12.6;
		LEVEL 1 FOR 6.489;
		LEVEL 0 FOR 2.45;
		LEVEL 1 FOR 2.55;
		LEVEL 0 FOR 2.45;
		LEVEL 1 FOR 1.329;
		LEVEL 0 FOR 1.275;
		LEVEL 1 FOR 3.7;
		LEVEL 0 FOR 5.025;
		LEVEL 1 FOR 1.306;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.467;
			LEVEL 1 FOR 1.866;
		}
		LEVEL 0 FOR 1.467;
		LEVEL 1 FOR 1.515;
		LEVEL 0 FOR 2.85;
		LEVEL 1 FOR 2.15;
		LEVEL 0 FOR 2.85;
		LEVEL 1 FOR 1.607;
		LEVEL 0 FOR 2.95;
		LEVEL 1 FOR 2.05;
		LEVEL 0 FOR 2.95;
		LEVEL 1 FOR 1.639;
		LEVEL 0 FOR 1.45;
		LEVEL 1 FOR 2.6;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.6;
		}
		LEVEL 0 FOR 0.95;
		LEVEL 1 FOR 3.364;
		LEVEL 0 FOR 11.4;
		LEVEL 1 FOR 5.236;
		LEVEL 0 FOR 5.967;
		LEVEL 1 FOR 3.1;
		LEVEL 0 FOR 1.169;
		LEVEL 1 FOR 3.599;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.067;
			LEVEL 1 FOR 3.599;
		}
		LEVEL 0 FOR 6.113;
		LEVEL 1 FOR 2.599;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.067;
			LEVEL 1 FOR 2.599;
		}
		LEVEL 0 FOR 0.789;
		LEVEL 1 FOR 1.789;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.667;
			LEVEL 1 FOR 2.999;
		}
		LEVEL 0 FOR 3.667;
		LEVEL 1 FOR 1.212;
		LEVEL 0 FOR 1.255;
		LEVEL 1 FOR 1.433;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.9;
			LEVEL 1 FOR 1.433;
		}
		LEVEL 0 FOR 0.646;
		LEVEL 1 FOR 2.65;
		LEVEL 0 FOR 12.2;
		LEVEL 1 FOR 5.15;
		LEVEL 0 FOR 0.799;
		LEVEL 1 FOR 3.2;
		LEVEL 0 FOR 11.713;
		LEVEL 1 FOR 3.3;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.7;
			LEVEL 1 FOR 3.3;
		}
		LEVEL 0 FOR 1.576;
		LEVEL 1 FOR 5.4;
		LEVEL 0 FOR 4.012;
		LEVEL 1 FOR 8.036;
		LEVEL 0 FOR 9.6;
		LEVEL 1 FOR 2.364;
		LEVEL 0 FOR 2.901;
		LEVEL 1 FOR 1.95;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.05;
			LEVEL 1 FOR 1.95;
		}
		LEVEL 0 FOR 0.149;
		LEVEL 1 FOR 1.874;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.1;
			LEVEL 1 FOR 4.9;
		}
		LEVEL 0 FOR 5.1;
		LEVEL 1 FOR 6.776;
		LEVEL 0 FOR 4.7;
		LEVEL 1 FOR 3.738;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.312;
		LEVEL 0 FOR 2.598;
		LEVEL 1 FOR 1.75;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.25;
			LEVEL 1 FOR 1.75;
		}
		LEVEL 0 FOR 12.645;
		LEVEL 1 FOR 6.2;
		LEVEL 0 FOR 1.807;
		LEVEL 1 FOR 0.804;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.567;
			LEVEL 1 FOR 1.766;
		}
		LEVEL 0 FOR 1.567;
		LEVEL 1 FOR 0.963;
		LEVEL 0 FOR 1.171;
		LEVEL 1 FOR 2.1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.9;
			LEVEL 1 FOR 2.1;
		}
		LEVEL 0 FOR 1.729;
		LEVEL 1 FOR 0.624;
		LEVEL 0 FOR 11.6;
		LEVEL 1 FOR 11.749;
		LEVEL 0 FOR 4.6;
		LEVEL 1 FOR 2.753;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 0.674;
		LEVEL 0 FOR 2.094;
		LEVEL 1 FOR 5.5;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.5;
			LEVEL 1 FOR 5.5;
		}
		LEVEL 0 FOR 4.252;
		LEVEL 1 FOR 4.3;
		LEVEL 0 FOR 5.514;
		LEVEL 1 FOR 9.4;
		LEVEL 0 FOR 9.094;
		LEVEL 1 FOR 3.7;
		LEVEL 0 FOR 6.146;
		LEVEL 1 FOR 1.697;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.95;
			LEVEL 1 FOR 2.05;
		}
		LEVEL 0 FOR 2.95;
		LEVEL 1 FOR 2.482;
		LEVEL 0 FOR 2.3;
		LEVEL 1 FOR 2.7;
		LEVEL 0 FOR 2.3;
		LEVEL 1 FOR 0.571;
		LEVEL 0 FOR 1.084;
		LEVEL 1 FOR 1.566;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.767;
			LEVEL 1 FOR 1.566;
		}
		LEVEL 0 FOR 0.684;
		LEVEL 1 FOR 1.693;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.467;
			LEVEL 1 FOR 3.199;
		}
		LEVEL 0 FOR 3.467;
		LEVEL 1 FOR 1.508;
		LEVEL 0 FOR 1.525;
		LEVEL 1 FOR 1.399;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.934;
			LEVEL 1 FOR 1.399;
		}
		LEVEL 0 FOR 2.827;
		LEVEL 1 FOR 2.666;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.666;
		}
		LEVEL 0 FOR 6.073;
		LEVEL 1 FOR 4.3;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.7;
			LEVEL 1 FOR 4.3;
		}
		LEVEL 0 FOR 1.212;
		LEVEL 1 FOR 5.663;
		LEVEL 0 FOR 11.0;
		LEVEL 1 FOR 3.337;
		LEVEL 0 FOR 0.068;
		LEVEL 1 FOR 2.533;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.133;
			LEVEL 1 FOR 2.533;
		}
		LEVEL 0 FOR 4.067;
		LEVEL 1 FOR 7.911;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 6.905;
		LEVEL 0 FOR 11.4;
		LEVEL 1 FOR 1.784;
		LEVEL 0 FOR 6.51;
		LEVEL 1 FOR 3.1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.9;
			LEVEL 1 FOR 3.1;
		}
		LEVEL 0 FOR 0.614;
		LEVEL 1 FOR 5.8;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.2;
			LEVEL 1 FOR 5.8;
		}
		LEVEL 0 FOR 3.976;
		LEVEL 1 FOR 1.48;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.6;
			LEVEL 1 FOR 2.4;
		}
		LEVEL 0 FOR 2.6;
		LEVEL 1 FOR 0.92;
	}
}

TRANSITION_LIST("IN[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.181;
		LEVEL 1 FOR 2.399;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.267;
			LEVEL 1 FOR 2.399;
		}
		LEVEL 0 FOR 3.088;
		LEVEL 1 FOR 1.955;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.3;
			LEVEL 1 FOR 3.7;
		}
		LEVEL 0 FOR 6.3;
		LEVEL 1 FOR 1.745;
		LEVEL 0 FOR 2.693;
		LEVEL 1 FOR 5.8;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.2;
			LEVEL 1 FOR 5.8;
		}
		LEVEL 0 FOR 2.806;
		LEVEL 1 FOR 1.55;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.45;
			LEVEL 1 FOR 1.55;
		}
		LEVEL 0 FOR 5.478;
		LEVEL 1 FOR 2.533;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.133;
			LEVEL 1 FOR 2.533;
		}
		LEVEL 0 FOR 0.808;
		LEVEL 1 FOR 0.638;
		LEVEL 0 FOR 6.2;
		LEVEL 1 FOR 3.162;
		LEVEL 0 FOR 0.55;
		LEVEL 1 FOR 2.45;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.55;
			LEVEL 1 FOR 2.45;
		}
		LEVEL 0 FOR 9.215;
		LEVEL 1 FOR 11.4;
		LEVEL 0 FOR 1.385;
		LEVEL 1 FOR 3.118;
		LEVEL 0 FOR 10.4;
		LEVEL 1 FOR 6.779;
		LEVEL 0 FOR 2.15;
		LEVEL 1 FOR 2.85;
		LEVEL 0 FOR 2.15;
		LEVEL 1 FOR 2.553;
		LEVEL 0 FOR 0.273;
		LEVEL 1 FOR 1.566;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.767;
			LEVEL 1 FOR 1.566;
		}
		LEVEL 0 FOR 3.613;
		LEVEL 1 FOR 2.65;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.35;
			LEVEL 1 FOR 2.65;
		}
		LEVEL 0 FOR 0.232;
		LEVEL 1 FOR 0.177;
		LEVEL 0 FOR 6.7;
		LEVEL 1 FOR 6.403;
		LEVEL 0 FOR 5.8;
		LEVEL 1 FOR 1.336;
		LEVEL 0 FOR 2.667;
		LEVEL 1 FOR 3.999;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.667;
			LEVEL 1 FOR 3.999;
		}
		LEVEL 0 FOR 2.667;
		LEVEL 1 FOR 3.585;
		LEVEL 0 FOR 1.399;
		LEVEL 1 FOR 1.366;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.967;
			LEVEL 1 FOR 1.366;
		}
		LEVEL 0 FOR 4.66;
		LEVEL 1 FOR 3.1;
		LEVEL 0 FOR 4.006;
		LEVEL 1 FOR 2.266;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.4;
			LEVEL 1 FOR 2.266;
		}
		LEVEL 0 FOR 4.918;
		LEVEL 1 FOR 2.15;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.85;
			LEVEL 1 FOR 2.15;
		}
		LEVEL 0 FOR 3.268;
		LEVEL 1 FOR 9.0;
		LEVEL 0 FOR 8.869;
		LEVEL 1 FOR 1.764;
		LEVEL 0 FOR 5.3;
		LEVEL 1 FOR 2.936;
		LEVEL 0 FOR 3.785;
		LEVEL 1 FOR 5.2;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.8;
			LEVEL 1 FOR 5.2;
		}
		LEVEL 0 FOR 3.402;
		LEVEL 1 FOR 1.8;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 1.8;
		}
		LEVEL 0 FOR 0.813;
		LEVEL 1 FOR 3.704;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 3.562;
		LEVEL 0 FOR 4.1;
		LEVEL 1 FOR 5.9;
		LEVEL 0 FOR 4.1;
		LEVEL 1 FOR 4.202;
		LEVEL 0 FOR 8.2;
		LEVEL 1 FOR 10.732;
		LEVEL 0 FOR 2.047;
		LEVEL 1 FOR 9.8;
		LEVEL 0 FOR 9.097;
		LEVEL 1 FOR 3.1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.9;
			LEVEL 1 FOR 3.1;
		}
		LEVEL 0 FOR 8.692;
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 0.264;
		LEVEL 1 FOR 0.001;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.4;
			LEVEL 1 FOR 1.933;
		}
		LEVEL 0 FOR 1.4;
		LEVEL 1 FOR 3.195;
		LEVEL 0 FOR 5.1;
		LEVEL 1 FOR 3.638;
		LEVEL 0 FOR 4.034;
		LEVEL 1 FOR 4.6;
		LEVEL 0 FOR 2.04;
		LEVEL 1 FOR 1.566;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.767;
			LEVEL 1 FOR 1.566;
		}
		LEVEL 0 FOR 1.094;
		LEVEL 1 FOR 0.704;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.3;
			LEVEL 1 FOR 1.033;
		}
		LEVEL 0 FOR 2.3;
		LEVEL 1 FOR 0.33;
		LEVEL 0 FOR 4.166;
		LEVEL 1 FOR 2.133;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.533;
			LEVEL 1 FOR 2.133;
		}
		LEVEL 0 FOR 0.369;
		LEVEL 1 FOR 3.016;
		LEVEL 0 FOR 5.8;
		LEVEL 1 FOR 2.086;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 2.598;
		LEVEL 0 FOR 2.022;
		LEVEL 1 FOR 7.8;
		LEVEL 0 FOR 10.178;
		LEVEL 1 FOR 0.173;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.4;
			LEVEL 1 FOR 5.6;
		}
		LEVEL 0 FOR 4.4;
		LEVEL 1 FOR 5.427;
		LEVEL 0 FOR 2.148;
		LEVEL 1 FOR 7.8;
		LEVEL 0 FOR 10.052;
		LEVEL 1 FOR 0.163;
		LEVEL 0 FOR 6.7;
		LEVEL 1 FOR 3.137;
		LEVEL 0 FOR 0.399;
		LEVEL 1 FOR 2.533;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.133;
			LEVEL 1 FOR 2.533;
		}
		LEVEL 0 FOR 5.878;
		LEVEL 1 FOR 4.4;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.6;
			LEVEL 1 FOR 4.4;
		}
		LEVEL 0 FOR 3.458;
		LEVEL 1 FOR 2.201;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.55;
			LEVEL 1 FOR 2.45;
		}
		LEVEL 0 FOR 2.55;
		LEVEL 1 FOR 0.249;
		LEVEL 0 FOR 1.958;
		LEVEL 1 FOR 5.6;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.4;
			LEVEL 1 FOR 5.6;
		}
		LEVEL 0 FOR 4.36;
		LEVEL 1 FOR 3.599;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.067;
			LEVEL 1 FOR 3.599;
		}
		LEVEL 0 FOR 1.151;
		LEVEL 1 FOR 3.811;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.8;
			LEVEL 1 FOR 3.866;
		}
		LEVEL 0 FOR 2.8;
		LEVEL 1 FOR 0.057;
		LEVEL 0 FOR 2.554;
		LEVEL 1 FOR 2.1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.9;
			LEVEL 1 FOR 2.1;
		}
		LEVEL 0 FOR 0.346;
		LEVEL 1 FOR 4.883;
		LEVEL 0 FOR 9.4;
		LEVEL 1 FOR 7.002;
		LEVEL 0 FOR 2.7;
		LEVEL 1 FOR 2.3;
		LEVEL 0 FOR 2.7;
		LEVEL 1 FOR 1.015;
		LEVEL 0 FOR 0.136;
		LEVEL 1 FOR 3.333;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.333;
			LEVEL 1 FOR 3.333;
		}
		LEVEL 0 FOR 3.199;
		LEVEL 1 FOR 3.159;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.8;
			LEVEL 1 FOR 4.2;
		}
		LEVEL 0 FOR 5.8;
		LEVEL 1 FOR 1.041;
		LEVEL 0 FOR 0.759;
		LEVEL 1 FOR 2.8;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.2;
			LEVEL 1 FOR 2.8;
		}
		LEVEL 0 FOR 4.627;
		LEVEL 1 FOR 3.9;
		LEVEL 0 FOR 7.971;
		LEVEL 1 FOR 4.9;
		LEVEL 0 FOR 4.908;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 1.934;
		LEVEL 1 FOR 2.199;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.467;
			LEVEL 1 FOR 2.199;
		}
		LEVEL 0 FOR 3.949;
		LEVEL 1 FOR 3.1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.9;
			LEVEL 1 FOR 3.1;
		}
		LEVEL 0 FOR 6.712;
		LEVEL 1 FOR 2.799;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.867;
			LEVEL 1 FOR 2.799;
		}
		LEVEL 0 FOR 7.067;
		LEVEL 1 FOR 8.8;
		LEVEL 0 FOR 7.911;
		LEVEL 1 FOR 3.786;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 3.732;
		LEVEL 0 FOR 3.733;
		LEVEL 1 FOR 2.933;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.733;
			LEVEL 1 FOR 2.933;
		}
		LEVEL 0 FOR 3.733;
		LEVEL 1 FOR 0.417;
		LEVEL 0 FOR 0.587;
		LEVEL 1 FOR 1.866;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.467;
			LEVEL 1 FOR 1.866;
		}
		LEVEL 0 FOR 3.452;
		LEVEL 1 FOR 3.532;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.134;
			LEVEL 1 FOR 3.532;
		}
		LEVEL 0 FOR 0.995;
		LEVEL 1 FOR 1.7;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.3;
			LEVEL 1 FOR 1.7;
		}
		LEVEL 0 FOR 2.87;
		LEVEL 1 FOR 0.331;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.85;
			LEVEL 1 FOR 2.15;
		}
		LEVEL 0 FOR 2.85;
		LEVEL 1 FOR 6.789;
		LEVEL 0 FOR 4.5;
		LEVEL 1 FOR 0.53;
	}
}

TRANSITION_LIST("IN[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.264;
		LEVEL 1 FOR 5.8;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.2;
			LEVEL 1 FOR 5.8;
		}
		LEVEL 0 FOR 3.047;
		LEVEL 1 FOR 1.266;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.067;
			LEVEL 1 FOR 1.266;
		}
		LEVEL 0 FOR 1.957;
		LEVEL 1 FOR 0.533;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.067;
			LEVEL 1 FOR 1.266;
		}
		LEVEL 0 FOR 2.067;
		LEVEL 1 FOR 2.425;
		LEVEL 0 FOR 2.667;
		LEVEL 1 FOR 3.999;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.667;
			LEVEL 1 FOR 3.999;
		}
		LEVEL 0 FOR 2.667;
		LEVEL 1 FOR 2.31;
		LEVEL 0 FOR 3.189;
		LEVEL 1 FOR 4.1;
		LEVEL 0 FOR 2.711;
		LEVEL 1 FOR 0.365;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.034;
			LEVEL 1 FOR 1.299;
		}
		LEVEL 0 FOR 2.034;
		LEVEL 1 FOR 0.935;
		LEVEL 0 FOR 5.597;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 1.34;
		LEVEL 1 FOR 3.866;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.8;
			LEVEL 1 FOR 3.866;
		}
		LEVEL 0 FOR 1.865;
		LEVEL 1 FOR 1.867;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.467;
			LEVEL 1 FOR 3.199;
		}
		LEVEL 0 FOR 3.467;
		LEVEL 1 FOR 1.818;
		LEVEL 0 FOR 6.7;
		LEVEL 1 FOR 3.3;
		LEVEL 0 FOR 6.7;
		LEVEL 1 FOR 5.103;
		LEVEL 0 FOR 6.6;
		LEVEL 1 FOR 3.4;
		LEVEL 0 FOR 6.6;
		LEVEL 1 FOR 9.645;
		LEVEL 0 FOR 11.4;
		LEVEL 1 FOR 0.068;
		LEVEL 0 FOR 2.701;
		LEVEL 1 FOR 3.066;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.6;
			LEVEL 1 FOR 3.066;
		}
		LEVEL 0 FOR 1.541;
		LEVEL 1 FOR 3.4;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.6;
			LEVEL 1 FOR 3.4;
		}
		LEVEL 0 FOR 6.424;
		LEVEL 1 FOR 1.65;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.35;
			LEVEL 1 FOR 1.65;
		}
		LEVEL 0 FOR 2.886;
		LEVEL 1 FOR 4.037;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 0.463;
		LEVEL 0 FOR 1.955;
		LEVEL 1 FOR 10.2;
		LEVEL 0 FOR 7.845;
		LEVEL 1 FOR 1.3;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.734;
			LEVEL 1 FOR 1.599;
		}
		LEVEL 0 FOR 1.734;
		LEVEL 1 FOR 1.624;
		LEVEL 0 FOR 10.2;
		LEVEL 1 FOR 8.924;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 1.127;
		LEVEL 0 FOR 1.767;
		LEVEL 1 FOR 1.566;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1.767;
			LEVEL 1 FOR 1.566;
		}
		LEVEL 0 FOR 1.767;
		LEVEL 1 FOR 8.111;
		LEVEL 0 FOR 12.8;
		LEVEL 1 FOR 0.581;
		LEVEL 0 FOR 3.786;
		LEVEL 1 FOR 8.6;
		LEVEL 0 FOR 9.759;
		LEVEL 1 FOR 11.0;
		LEVEL 0 FOR 6.855;
		LEVEL 1 FOR 2.688;
		LEVEL 0 FOR 5.6;
		LEVEL 1 FOR 2.276;
		LEVEL 0 FOR 5.9;
		LEVEL 1 FOR 3.536;
		LEVEL 0 FOR 1.423;
		LEVEL 1 FOR 1.633;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.7;
			LEVEL 1 FOR 1.633;
		}
		LEVEL 0 FOR 0.278;
		LEVEL 1 FOR 0.346;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.967;
			LEVEL 1 FOR 1.366;
		}
		LEVEL 0 FOR 1.967;
		LEVEL 1 FOR 1.021;
		LEVEL 0 FOR 1.426;
		LEVEL 1 FOR 1.399;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.934;
			LEVEL 1 FOR 1.399;
		}
		LEVEL 0 FOR 0.509;
		LEVEL 1 FOR 0.388;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.808;
		LEVEL 0 FOR 1.434;
		LEVEL 1 FOR 1.899;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1.434;
			LEVEL 1 FOR 1.899;
		}
		LEVEL 0 FOR 1.434;
		LEVEL 1 FOR 3.198;
		LEVEL 0 FOR 2.35;
		LEVEL 1 FOR 2.65;
		LEVEL 0 FOR 2.35;
		LEVEL 1 FOR 1.325;
		LEVEL 0 FOR 2.85;
		LEVEL 1 FOR 2.15;
		LEVEL 0 FOR 2.85;
		LEVEL 1 FOR 2.623;
		LEVEL 0 FOR 3.867;
		LEVEL 1 FOR 2.799;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.867;
			LEVEL 1 FOR 2.799;
		}
		LEVEL 0 FOR 3.867;
		LEVEL 1 FOR 1.159;
		LEVEL 0 FOR 0.323;
		LEVEL 1 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.019;
		LEVEL 1 FOR 3.5;
		LEVEL 0 FOR 6.158;
		LEVEL 1 FOR 0.151;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.634;
			LEVEL 1 FOR 1.699;
		}
		LEVEL 0 FOR 1.634;
		LEVEL 1 FOR 2.973;
		LEVEL 0 FOR 4.133;
		LEVEL 1 FOR 2.533;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.133;
			LEVEL 1 FOR 2.533;
		}
		LEVEL 0 FOR 4.133;
		LEVEL 1 FOR 1.738;
		LEVEL 0 FOR 4.067;
		LEVEL 1 FOR 2.599;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.067;
			LEVEL 1 FOR 2.599;
		}
		LEVEL 0 FOR 4.067;
		LEVEL 1 FOR 3.245;
		LEVEL 0 FOR 1.6;
		LEVEL 1 FOR 1.733;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1.6;
			LEVEL 1 FOR 1.733;
		}
		LEVEL 0 FOR 1.6;
		LEVEL 1 FOR 3.174;
		LEVEL 0 FOR 6.9;
		LEVEL 1 FOR 3.1;
		LEVEL 0 FOR 6.9;
		LEVEL 1 FOR 0.389;
		LEVEL 0 FOR 0.058;
		LEVEL 1 FOR 3.266;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.4;
			LEVEL 1 FOR 3.266;
		}
		LEVEL 0 FOR 3.344;
		LEVEL 1 FOR 1.692;
		LEVEL 0 FOR 6.6;
		LEVEL 1 FOR 2.605;
		LEVEL 0 FOR 2.65;
		LEVEL 1 FOR 2.35;
		LEVEL 0 FOR 2.65;
		LEVEL 1 FOR 1.453;
		LEVEL 0 FOR 4.006;
		LEVEL 1 FOR 6.6;
		LEVEL 0 FOR 11.474;
		LEVEL 1 FOR 1.95;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.05;
			LEVEL 1 FOR 1.95;
		}
		LEVEL 0 FOR 4.346;
		LEVEL 1 FOR 6.8;
		LEVEL 0 FOR 11.741;
		LEVEL 1 FOR 3.866;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.8;
			LEVEL 1 FOR 3.866;
		}
		LEVEL 0 FOR 0.885;
		LEVEL 1 FOR 1.529;
		LEVEL 0 FOR 8.6;
		LEVEL 1 FOR 10.326;
		LEVEL 0 FOR 2.334;
		LEVEL 1 FOR 0.999;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.334;
			LEVEL 1 FOR 0.999;
		}
		LEVEL 0 FOR 2.334;
		LEVEL 1 FOR 0.907;
		LEVEL 0 FOR 1.734;
		LEVEL 1 FOR 1.599;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1.734;
			LEVEL 1 FOR 1.599;
		}
		LEVEL 0 FOR 1.734;
		LEVEL 1 FOR 1.238;
		LEVEL 0 FOR 1.529;
		LEVEL 1 FOR 2.65;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.35;
			LEVEL 1 FOR 2.65;
		}
		LEVEL 0 FOR 2.172;
		LEVEL 1 FOR 2.15;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.85;
			LEVEL 1 FOR 2.15;
		}
		LEVEL 0 FOR 1.499;
		LEVEL 1 FOR 5.231;
		LEVEL 0 FOR 8.2;
		LEVEL 1 FOR 6.569;
		LEVEL 0 FOR 4.482;
		LEVEL 1 FOR 3.4;
		LEVEL 0 FOR 2.118;
		LEVEL 1 FOR 0.6;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.5;
			LEVEL 1 FOR 5.5;
		}
		LEVEL 0 FOR 4.5;
		LEVEL 1 FOR 4.9;
		LEVEL 0 FOR 1.084;
		LEVEL 1 FOR 3.7;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.3;
			LEVEL 1 FOR 3.7;
		}
		LEVEL 0 FOR 5.755;
		LEVEL 1 FOR 3.9;
		LEVEL 0 FOR 5.794;
		LEVEL 1 FOR 8.4;
		LEVEL 0 FOR 11.367;
		LEVEL 1 FOR 0.153;
		LEVEL 0 FOR 5.6;
		LEVEL 1 FOR 5.33;
		LEVEL 0 FOR 4.067;
		LEVEL 1 FOR 2.599;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.067;
			LEVEL 1 FOR 2.599;
		}
		LEVEL 0 FOR 4.067;
		LEVEL 1 FOR 4.03;
		LEVEL 0 FOR 3.533;
		LEVEL 1 FOR 3.133;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.533;
			LEVEL 1 FOR 3.133;
		}
		LEVEL 0 FOR 3.533;
		LEVEL 1 FOR 0.623;
		LEVEL 0 FOR 1.252;
		LEVEL 1 FOR 1.266;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.067;
			LEVEL 1 FOR 1.266;
		}
		LEVEL 0 FOR 0.816;
		LEVEL 1 FOR 2.955;
		LEVEL 0 FOR 4.4;
		LEVEL 1 FOR 4.152;
		LEVEL 0 FOR 4.7;
		LEVEL 1 FOR 5.3;
		LEVEL 0 FOR 4.7;
		LEVEL 1 FOR 5.967;
		LEVEL 0 FOR 3.467;
		LEVEL 1 FOR 3.199;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.467;
			LEVEL 1 FOR 3.199;
		}
		LEVEL 0 FOR 3.467;
		LEVEL 1 FOR 1.027;
	}
}

TRANSITION_LIST("IN[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.558;
		LEVEL 1 FOR 3.2;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.8;
			LEVEL 1 FOR 3.2;
		}
		LEVEL 0 FOR 3.242;
		LEVEL 1 FOR 1.842;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.158;
		LEVEL 0 FOR 3.202;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.5;
			LEVEL 1 FOR 1.5;
		}
		LEVEL 0 FOR 0.298;
		LEVEL 1 FOR 7.706;
		LEVEL 0 FOR 11.6;
		LEVEL 1 FOR 0.694;
		LEVEL 0 FOR 3.074;
		LEVEL 1 FOR 2.733;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.933;
			LEVEL 1 FOR 2.733;
		}
		LEVEL 0 FOR 0.861;
		LEVEL 1 FOR 0.592;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.134;
			LEVEL 1 FOR 1.199;
		}
		LEVEL 0 FOR 2.134;
		LEVEL 1 FOR 0.608;
		LEVEL 0 FOR 1.171;
		LEVEL 1 FOR 4.2;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.8;
			LEVEL 1 FOR 4.2;
		}
		LEVEL 0 FOR 4.629;
		LEVEL 1 FOR 0.442;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.1;
			LEVEL 1 FOR 4.9;
		}
		LEVEL 0 FOR 5.1;
		LEVEL 1 FOR 4.458;
		LEVEL 0 FOR 1.625;
		LEVEL 1 FOR 1.333;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 1.333;
		}
		LEVEL 0 FOR 6.367;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 0.009;
		LEVEL 1 FOR 0.351;
		LEVEL 0 FOR 6.1;
		LEVEL 1 FOR 5.001;
		LEVEL 0 FOR 6.4;
		LEVEL 1 FOR 3.6;
		LEVEL 0 FOR 6.4;
		LEVEL 1 FOR 5.179;
		LEVEL 0 FOR 6.1;
		LEVEL 1 FOR 3.9;
		LEVEL 0 FOR 6.1;
		LEVEL 1 FOR 0.869;
		LEVEL 0 FOR 12.855;
		LEVEL 1 FOR 6.6;
		LEVEL 0 FOR 0.545;
		LEVEL 1 FOR 0.223;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.45;
			LEVEL 1 FOR 1.55;
		}
		LEVEL 0 FOR 3.45;
		LEVEL 1 FOR 1.717;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 3.329;
		LEVEL 0 FOR 3.15;
		LEVEL 1 FOR 1.85;
		LEVEL 0 FOR 3.15;
		LEVEL 1 FOR 0.631;
		LEVEL 0 FOR 2.286;
		LEVEL 1 FOR 1.85;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.15;
			LEVEL 1 FOR 1.85;
		}
		LEVEL 0 FOR 2.264;
		LEVEL 1 FOR 2.799;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.867;
			LEVEL 1 FOR 2.799;
		}
		LEVEL 0 FOR 3.175;
		LEVEL 1 FOR 1.933;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.4;
			LEVEL 1 FOR 1.933;
		}
		LEVEL 0 FOR 0.695;
		LEVEL 1 FOR 2.427;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.5;
			LEVEL 1 FOR 4.5;
		}
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 2.513;
		LEVEL 0 FOR 2.4;
		LEVEL 1 FOR 2.6;
		LEVEL 0 FOR 2.4;
		LEVEL 1 FOR 2.16;
		LEVEL 0 FOR 0.52;
		LEVEL 1 FOR 1.8;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 1.8;
		}
		LEVEL 0 FOR 2.68;
		LEVEL 1 FOR 2.548;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.25;
			LEVEL 1 FOR 2.75;
		}
		LEVEL 0 FOR 2.25;
		LEVEL 1 FOR 0.89;
		LEVEL 0 FOR 1.9;
		LEVEL 1 FOR 1.433;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1.9;
			LEVEL 1 FOR 1.433;
		}
		LEVEL 0 FOR 1.9;
		LEVEL 1 FOR 0.746;
		LEVEL 0 FOR 1.136;
		LEVEL 1 FOR 3.7;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.3;
			LEVEL 1 FOR 3.7;
		}
		LEVEL 0 FOR 11.183;
		LEVEL 1 FOR 3.8;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.2;
			LEVEL 1 FOR 3.8;
		}
		LEVEL 0 FOR 0.181;
		LEVEL 1 FOR 5.633;
		LEVEL 0 FOR 12.6;
		LEVEL 1 FOR 1.767;
		LEVEL 0 FOR 0.505;
		LEVEL 1 FOR 1.899;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.434;
			LEVEL 1 FOR 1.899;
		}
		LEVEL 0 FOR 0.93;
		LEVEL 1 FOR 4.337;
		LEVEL 0 FOR 11.2;
		LEVEL 1 FOR 4.463;
		LEVEL 0 FOR 1.723;
		LEVEL 1 FOR 2.533;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.133;
			LEVEL 1 FOR 2.533;
		}
		LEVEL 0 FOR 2.412;
		LEVEL 1 FOR 2.338;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
		}
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.893;
		LEVEL 0 FOR 3.3;
		LEVEL 1 FOR 1.7;
		LEVEL 0 FOR 3.3;
		LEVEL 1 FOR 0.969;
		LEVEL 0 FOR 4.377;
		LEVEL 1 FOR 2.066;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.6;
			LEVEL 1 FOR 2.066;
		}
		LEVEL 0 FOR 5.619;
		LEVEL 1 FOR 4.5;
		LEVEL 0 FOR 3.14;
		LEVEL 1 FOR 1.65;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.35;
			LEVEL 1 FOR 1.65;
		}
		LEVEL 0 FOR 2.415;
		LEVEL 1 FOR 5.6;
		LEVEL 0 FOR 5.297;
		LEVEL 1 FOR 2.733;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.933;
			LEVEL 1 FOR 2.733;
		}
		LEVEL 0 FOR 0.939;
		LEVEL 1 FOR 1.56;
		LEVEL 0 FOR 10.4;
		LEVEL 1 FOR 8.04;
		LEVEL 0 FOR 0.583;
		LEVEL 1 FOR 1.166;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.167;
			LEVEL 1 FOR 1.166;
		}
		LEVEL 0 FOR 5.09;
		LEVEL 1 FOR 2.933;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.733;
			LEVEL 1 FOR 2.933;
		}
		LEVEL 0 FOR 0.266;
		LEVEL 1 FOR 1.533;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.8;
			LEVEL 1 FOR 1.533;
		}
		LEVEL 0 FOR 1.765;
		LEVEL 1 FOR 0.614;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 1.333;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.72;
		LEVEL 0 FOR 1.444;
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 3.045;
		LEVEL 1 FOR 1.75;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.25;
			LEVEL 1 FOR 1.75;
		}
		LEVEL 0 FOR 1.761;
		LEVEL 1 FOR 2.477;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.667;
			LEVEL 1 FOR 3.999;
		}
		LEVEL 0 FOR 2.667;
		LEVEL 1 FOR 1.524;
		LEVEL 0 FOR 2.801;
		LEVEL 1 FOR 2.15;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.85;
			LEVEL 1 FOR 2.15;
		}
		LEVEL 0 FOR 3.626;
		LEVEL 1 FOR 2.466;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.2;
			LEVEL 1 FOR 2.466;
		}
		LEVEL 0 FOR 0.625;
		LEVEL 1 FOR 1.998;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.6;
			LEVEL 1 FOR 3.066;
		}
		LEVEL 0 FOR 3.6;
		LEVEL 1 FOR 1.07;
		LEVEL 0 FOR 1.138;
		LEVEL 1 FOR 1.599;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.734;
			LEVEL 1 FOR 1.599;
		}
		LEVEL 0 FOR 0.597;
		LEVEL 1 FOR 2.238;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.2;
			LEVEL 1 FOR 4.8;
		}
		LEVEL 0 FOR 5.2;
		LEVEL 1 FOR 2.562;
		LEVEL 0 FOR 2.234;
		LEVEL 1 FOR 8.2;
		LEVEL 0 FOR 9.566;
		LEVEL 1 FOR 4.117;
		LEVEL 0 FOR 4.8;
		LEVEL 1 FOR 3.964;
		LEVEL 0 FOR 5.4;
		LEVEL 1 FOR 4.6;
		LEVEL 0 FOR 5.4;
		LEVEL 1 FOR 8.193;
		LEVEL 0 FOR 10.6;
		LEVEL 1 FOR 2.926;
		LEVEL 0 FOR 1.389;
		LEVEL 1 FOR 5.1;
		LEVEL 0 FOR 4.082;
		LEVEL 1 FOR 5.1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.9;
			LEVEL 1 FOR 5.1;
		}
		LEVEL 0 FOR 4.329;
		LEVEL 1 FOR 2.378;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.267;
			LEVEL 1 FOR 2.399;
		}
		LEVEL 0 FOR 4.267;
		LEVEL 1 FOR 2.465;
		LEVEL 0 FOR 5.9;
		LEVEL 1 FOR 4.1;
		LEVEL 0 FOR 5.9;
		LEVEL 1 FOR 1.658;
		LEVEL 0 FOR 0.994;
		LEVEL 1 FOR 5.9;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.1;
			LEVEL 1 FOR 5.9;
		}
		LEVEL 0 FOR 5.94;
		LEVEL 1 FOR 1.7;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.3;
			LEVEL 1 FOR 1.7;
		}
		LEVEL 0 FOR 0.466;
		LEVEL 1 FOR 0.16;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.7;
			LEVEL 1 FOR 4.3;
		}
		LEVEL 0 FOR 5.7;
		LEVEL 1 FOR 4.14;
		LEVEL 0 FOR 9.154;
		LEVEL 1 FOR 9.2;
		LEVEL 0 FOR 2.884;
		LEVEL 1 FOR 3.6;
		LEVEL 0 FOR 8.067;
		LEVEL 1 FOR 2.999;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.667;
			LEVEL 1 FOR 2.999;
		}
		LEVEL 0 FOR 0.764;
		LEVEL 1 FOR 8.398;
		LEVEL 0 FOR 10.6;
		LEVEL 1 FOR 1.002;
	}
}

TRANSITION_LIST("Operandtwo[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("Operandtwo[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("Operandtwo[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("Operandtwo[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("Opernadone[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("Opernadone[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("Opernadone[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("Opernadone[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ORA[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ORA[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ORA[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ORA[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ORB[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ORB[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ORB[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ORB[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ORC[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ORC[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ORC[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ORC[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("Sone[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("Sone[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("Stwo[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("Stwo[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("V[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("V[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("V[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("V[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "IN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5;
}

DISPLAY_LINE
{
	CHANNEL = "IN[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "IN[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "IN[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "IN[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "Operandtwo";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "Operandtwo[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "Operandtwo[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "Operandtwo[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "Operandtwo[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "Opernadone";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15;
}

DISPLAY_LINE
{
	CHANNEL = "Opernadone[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "Opernadone[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "Opernadone[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "Opernadone[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "ORA";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
	CHILDREN = 17, 18, 19, 20;
}

DISPLAY_LINE
{
	CHANNEL = "ORA[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "ORA[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "ORA[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "ORA[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "ORB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
	CHILDREN = 22, 23, 24, 25;
}

DISPLAY_LINE
{
	CHANNEL = "ORB[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "ORB[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "ORB[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "ORB[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "ORC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 0;
	CHILDREN = 27, 28, 29, 30;
}

DISPLAY_LINE
{
	CHANNEL = "ORC[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "ORC[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "ORC[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "ORC[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "Sone";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
	CHILDREN = 32, 33;
}

DISPLAY_LINE
{
	CHANNEL = "Sone[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "Sone[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "Stwo";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 0;
	CHILDREN = 35, 36;
}

DISPLAY_LINE
{
	CHANNEL = "Stwo[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "Stwo[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "V";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 0;
	CHILDREN = 38, 39, 40, 41;
}

DISPLAY_LINE
{
	CHANNEL = "V[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "V[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "V[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "V[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 37;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
