/*<simulation_settings>
<ftestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=verilog --write_settings_files=off alu -c alu --vector_source="C:/Users/20112/Desktop/Projects/LabsQ/Waveform12.vwf" --testbench_file="C:/Users/20112/Desktop/Projects/LabsQ/simulation/qsim/Waveform12.vwf.vt"</ftestbench_cmd>
<ttestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=verilog --write_settings_files=off alu -c alu --vector_source="C:/Users/20112/Desktop/Projects/LabsQ/Waveform12.vwf" --testbench_file="C:/Users/20112/Desktop/Projects/LabsQ/simulation/qsim/Waveform12.vwf.vt"</ttestbench_cmd>
<fnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=on --flatten_buses=off --tool=modelsim_oem --format=verilog --output_directory="C:/Users/20112/Desktop/Projects/LabsQ/simulation/qsim/" alu -c alu</fnetlist_cmd>
<tnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=off --flatten_buses=off --timescale=1ps --tool=modelsim_oem --format=verilog --output_directory="C:/Users/20112/Desktop/Projects/LabsQ/simulation/qsim/" alu -c alu</tnetlist_cmd>
<modelsim_script>onerror {exit -code 1}
vlib work
vlog -work work alu.vo
vlog -work work Waveform12.vwf.vt
vsim -c -t 1ps -L cyclonev_ver -L altera_ver -L altera_mf_ver -L 220model_ver -L sgate_ver -L altera_lnsim_ver work.Block2a_vlg_vec_tst
vcd file -direction alu.msim.vcd
vcd add -internal Block2a_vlg_vec_tst/*
vcd add -internal Block2a_vlg_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f
</modelsim_script>
<modelsim_script_timing>onerror {exit -code 1}
vlib work
vlog -work work alu.vo
vlog -work work Waveform12.vwf.vt
vsim -novopt -c -t 1ps -L cyclonev_ver -L altera_ver -L altera_mf_ver -L 220model_ver -L sgate_ver -L altera_lnsim_ver work.Block2a_vlg_vec_tst
vcd file -direction alu.msim.vcd
vcd add -internal Block2a_vlg_vec_tst/*
vcd add -internal Block2a_vlg_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f
</modelsim_script_timing>
<hdl_lang>verilog</hdl_lang>
</simulation_settings>*/
/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2020  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("A")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("A[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "A";
}

SIGNAL("A[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "A";
}

SIGNAL("A[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "A";
}

SIGNAL("A[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "A";
}

SIGNAL("B")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("B[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "B";
}

SIGNAL("B[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "B";
}

SIGNAL("B[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "B";
}

SIGNAL("B[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "B";
}

SIGNAL("C")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("C[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "C";
}

SIGNAL("C[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "C";
}

SIGNAL("C[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "C";
}

SIGNAL("C[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "C";
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("D")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("D[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D";
}

SIGNAL("D[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D";
}

SIGNAL("D[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D";
}

SIGNAL("D[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D";
}

SIGNAL("IN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("IN[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "IN";
}

SIGNAL("IN[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "IN";
}

SIGNAL("IN[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "IN";
}

SIGNAL("IN[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "IN";
}

SIGNAL("Operandtwo")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Operandtwo[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Operandtwo";
}

SIGNAL("Operandtwo[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Operandtwo";
}

SIGNAL("Operandtwo[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Operandtwo";
}

SIGNAL("Operandtwo[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Operandtwo";
}

SIGNAL("Opernadone")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Opernadone[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Opernadone";
}

SIGNAL("Opernadone[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Opernadone";
}

SIGNAL("Opernadone[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Opernadone";
}

SIGNAL("Opernadone[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Opernadone";
}

SIGNAL("ORA")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ORA[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ORA";
}

SIGNAL("ORA[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ORA";
}

SIGNAL("ORA[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ORA";
}

SIGNAL("ORA[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ORA";
}

SIGNAL("ORB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ORB[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ORB";
}

SIGNAL("ORB[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ORB";
}

SIGNAL("ORB[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ORB";
}

SIGNAL("ORB[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ORB";
}

SIGNAL("ORC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ORC[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ORC";
}

SIGNAL("ORC[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ORC";
}

SIGNAL("ORC[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ORC";
}

SIGNAL("ORC[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ORC";
}

SIGNAL("SA")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SA[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SA";
}

SIGNAL("SA[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SA";
}

SIGNAL("Sone")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Sone[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Sone";
}

SIGNAL("Sone[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Sone";
}

SIGNAL("SSB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SSB[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SSB";
}

SIGNAL("SSB[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SSB";
}

SIGNAL("Stwo")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Stwo[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Stwo";
}

SIGNAL("Stwo[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Stwo";
}

SIGNAL("V")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("V[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "V";
}

SIGNAL("V[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "V";
}

SIGNAL("V[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "V";
}

SIGNAL("V[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "V";
}

TRANSITION_LIST("A[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("A[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("A[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("A[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("B[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("B[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("B[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("B[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("C[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("C[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("C[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("C[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("D[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("D[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("D[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("D[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("IN[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
	}
}

TRANSITION_LIST("IN[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("IN[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("IN[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 30.0;
	}
}

TRANSITION_LIST("Operandtwo[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("Operandtwo[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("Operandtwo[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("Operandtwo[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("Opernadone[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("Opernadone[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("Opernadone[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("Opernadone[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ORA[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ORA[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ORA[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ORA[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ORB[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ORB[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ORB[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ORB[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ORC[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ORC[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ORC[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ORC[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("SA[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("SA[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("Sone[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 40.0;
	}
}

TRANSITION_LIST("Sone[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("SSB[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("SSB[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("Stwo[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 40.0;
	}
}

TRANSITION_LIST("Stwo[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("V[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.853;
		LEVEL 1 FOR 3.8;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.2;
			LEVEL 1 FOR 3.8;
		}
		LEVEL 0 FOR 2.347;
		LEVEL 1 FOR 0.74;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.4;
			LEVEL 1 FOR 1.933;
		}
		LEVEL 0 FOR 1.4;
		LEVEL 1 FOR 1.194;
		LEVEL 0 FOR 1.543;
		LEVEL 1 FOR 3.4;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.6;
			LEVEL 1 FOR 3.4;
		}
		LEVEL 0 FOR 6.904;
		LEVEL 1 FOR 9.0;
		LEVEL 0 FOR 9.153;
		LEVEL 1 FOR 1.397;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 1.8;
		}
		LEVEL 0 FOR 3.2;
		LEVEL 1 FOR 2.888;
		LEVEL 0 FOR 3.067;
		LEVEL 1 FOR 3.599;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.067;
			LEVEL 1 FOR 3.599;
		}
		LEVEL 0 FOR 3.067;
		LEVEL 1 FOR 3.356;
		LEVEL 0 FOR 5.2;
		LEVEL 1 FOR 2.56;
		LEVEL 0 FOR 9.552;
		LEVEL 1 FOR 7.2;
		LEVEL 0 FOR 3.248;
		LEVEL 1 FOR 0.545;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.8;
			LEVEL 1 FOR 2.866;
		}
		LEVEL 0 FOR 3.8;
		LEVEL 1 FOR 4.38;
		LEVEL 0 FOR 5.1;
		LEVEL 1 FOR 4.9;
		LEVEL 0 FOR 5.1;
		LEVEL 1 FOR 8.83;
		LEVEL 0 FOR 9.4;
		LEVEL 1 FOR 4.613;
		LEVEL 0 FOR 5.123;
		LEVEL 1 FOR 4.3;
		LEVEL 0 FOR 0.577;
		LEVEL 1 FOR 5.099;
		LEVEL 0 FOR 11.8;
		LEVEL 1 FOR 3.101;
		LEVEL 0 FOR 0.057;
		LEVEL 1 FOR 1.599;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.734;
			LEVEL 1 FOR 1.599;
		}
		LEVEL 0 FOR 12.6;
		LEVEL 1 FOR 7.2;
		LEVEL 0 FOR 6.137;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 8.741;
		LEVEL 1 FOR 1.988;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.9;
			LEVEL 1 FOR 2.1;
		}
		LEVEL 0 FOR 2.9;
		LEVEL 1 FOR 6.829;
		LEVEL 0 FOR 8.4;
		LEVEL 1 FOR 4.883;
		LEVEL 0 FOR 1.443;
		LEVEL 1 FOR 2.25;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.75;
			LEVEL 1 FOR 2.25;
		}
		LEVEL 0 FOR 2.748;
		LEVEL 1 FOR 4.9;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.1;
			LEVEL 1 FOR 4.9;
		}
		LEVEL 0 FOR 3.659;
		LEVEL 1 FOR 0.297;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.467;
			LEVEL 1 FOR 3.199;
		}
		LEVEL 0 FOR 3.467;
		LEVEL 1 FOR 4.005;
		LEVEL 0 FOR 6.4;
		LEVEL 1 FOR 4.152;
		LEVEL 0 FOR 5.7;
		LEVEL 1 FOR 4.3;
		LEVEL 0 FOR 5.7;
		LEVEL 1 FOR 2.647;
		LEVEL 0 FOR 2.3;
		LEVEL 1 FOR 3.3;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.7;
			LEVEL 1 FOR 3.3;
		}
		LEVEL 0 FOR 4.728;
		LEVEL 1 FOR 2.199;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.467;
			LEVEL 1 FOR 2.199;
		}
		LEVEL 0 FOR 5.442;
		LEVEL 1 FOR 6.6;
		LEVEL 0 FOR 12.099;
		LEVEL 1 FOR 0.654;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.867;
			LEVEL 1 FOR 1.466;
		}
		LEVEL 0 FOR 1.867;
		LEVEL 1 FOR 1.778;
		LEVEL 0 FOR 2.1;
		LEVEL 1 FOR 1.233;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.1;
			LEVEL 1 FOR 1.233;
		}
		LEVEL 0 FOR 2.1;
		LEVEL 1 FOR 1.26;
		LEVEL 0 FOR 5.1;
		LEVEL 1 FOR 3.909;
		LEVEL 0 FOR 0.495;
		LEVEL 1 FOR 1.299;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.034;
			LEVEL 1 FOR 1.299;
		}
		LEVEL 0 FOR 1.54;
		LEVEL 1 FOR 0.305;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.067;
			LEVEL 1 FOR 2.599;
		}
		LEVEL 0 FOR 4.067;
		LEVEL 1 FOR 7.807;
		LEVEL 0 FOR 13.4;
		LEVEL 1 FOR 4.039;
		LEVEL 0 FOR 2.734;
		LEVEL 1 FOR 3.932;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.734;
			LEVEL 1 FOR 3.932;
		}
		LEVEL 0 FOR 2.734;
		LEVEL 1 FOR 0.984;
		LEVEL 0 FOR 1.302;
		LEVEL 1 FOR 4.7;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.3;
			LEVEL 1 FOR 4.7;
		}
		LEVEL 0 FOR 5.845;
		LEVEL 1 FOR 3.466;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 3.466;
		}
		LEVEL 0 FOR 3.162;
		LEVEL 1 FOR 3.599;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.067;
			LEVEL 1 FOR 3.599;
		}
		LEVEL 0 FOR 2.207;
		LEVEL 1 FOR 1.599;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.734;
			LEVEL 1 FOR 1.599;
		}
		LEVEL 0 FOR 0.895;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.498;
		LEVEL 1 FOR 2.3;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.7;
			LEVEL 1 FOR 2.3;
		}
		LEVEL 0 FOR 2.301;
		LEVEL 1 FOR 4.3;
		LEVEL 0 FOR 5.496;
		LEVEL 1 FOR 0.424;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.867;
			LEVEL 1 FOR 2.799;
		}
		LEVEL 0 FOR 3.867;
		LEVEL 1 FOR 4.332;
		LEVEL 0 FOR 5.2;
		LEVEL 1 FOR 4.8;
		LEVEL 0 FOR 5.2;
		LEVEL 1 FOR 4.197;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 2.148;
		LEVEL 0 FOR 1.471;
		LEVEL 1 FOR 9.2;
		LEVEL 0 FOR 9.371;
		LEVEL 1 FOR 1.666;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.667;
			LEVEL 1 FOR 1.666;
		}
		LEVEL 0 FOR 5.729;
		LEVEL 1 FOR 4.3;
		LEVEL 0 FOR 1.597;
		LEVEL 1 FOR 0.214;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.6;
			LEVEL 1 FOR 2.4;
		}
		LEVEL 0 FOR 2.6;
		LEVEL 1 FOR 7.126;
		LEVEL 0 FOR 4.1;
		LEVEL 1 FOR 0.96;
		LEVEL 0 FOR 4.734;
		LEVEL 1 FOR 4.3;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.7;
			LEVEL 1 FOR 4.3;
		}
		LEVEL 0 FOR 0.966;
		LEVEL 1 FOR 2.777;
		LEVEL 0 FOR 12.4;
		LEVEL 1 FOR 6.438;
		LEVEL 0 FOR 5.4;
		LEVEL 1 FOR 4.6;
		LEVEL 0 FOR 5.4;
		LEVEL 1 FOR 2.985;
		LEVEL 0 FOR 1.102;
		LEVEL 1 FOR 2.199;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.467;
			LEVEL 1 FOR 2.199;
		}
		LEVEL 0 FOR 3.367;
		LEVEL 1 FOR 1.034;
		LEVEL 0 FOR 5.7;
		LEVEL 1 FOR 3.266;
		LEVEL 0 FOR 3.357;
		LEVEL 1 FOR 2.799;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.867;
			LEVEL 1 FOR 2.799;
		}
		LEVEL 0 FOR 3.302;
		LEVEL 1 FOR 3.8;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.2;
			LEVEL 1 FOR 3.8;
		}
		LEVEL 0 FOR 3.41;
		LEVEL 1 FOR 4.186;
		LEVEL 0 FOR 11.4;
		LEVEL 1 FOR 4.778;
		LEVEL 0 FOR 4.133;
		LEVEL 1 FOR 2.533;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.133;
			LEVEL 1 FOR 2.533;
		}
		LEVEL 0 FOR 4.133;
		LEVEL 1 FOR 5.43;
		LEVEL 0 FOR 5.3;
		LEVEL 1 FOR 1.441;
		LEVEL 0 FOR 3.935;
		LEVEL 1 FOR 4.7;
		LEVEL 0 FOR 4.402;
		LEVEL 1 FOR 2.866;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.8;
			LEVEL 1 FOR 2.866;
		}
		LEVEL 0 FOR 3.574;
		LEVEL 1 FOR 3.3;
		LEVEL 0 FOR 3.891;
		LEVEL 1 FOR 1.014;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.167;
			LEVEL 1 FOR 1.166;
		}
		LEVEL 0 FOR 2.167;
		LEVEL 1 FOR 0.153;
		LEVEL 0 FOR 0.548;
		LEVEL 1 FOR 3.333;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.333;
			LEVEL 1 FOR 3.333;
		}
		LEVEL 0 FOR 2.787;
	}
}

TRANSITION_LIST("V[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2.922;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.7;
			LEVEL 1 FOR 3.3;
		}
		LEVEL 0 FOR 6.7;
		LEVEL 1 FOR 2.731;
		LEVEL 0 FOR 6.3;
		LEVEL 1 FOR 3.7;
		LEVEL 0 FOR 6.3;
		LEVEL 1 FOR 2.852;
		LEVEL 0 FOR 3.533;
		LEVEL 1 FOR 3.133;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.533;
			LEVEL 1 FOR 3.133;
		}
		LEVEL 0 FOR 3.533;
		LEVEL 1 FOR 1.63;
		LEVEL 0 FOR 1.958;
		LEVEL 1 FOR 2.15;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.85;
			LEVEL 1 FOR 2.15;
		}
		LEVEL 0 FOR 9.349;
		LEVEL 1 FOR 8.2;
		LEVEL 0 FOR 3.343;
		LEVEL 1 FOR 1.134;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 3.866;
		LEVEL 0 FOR 0.164;
		LEVEL 1 FOR 4.8;
		LEVEL 0 FOR 5.036;
		LEVEL 1 FOR 1.96;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.2;
			LEVEL 1 FOR 2.466;
		}
		LEVEL 0 FOR 4.2;
		LEVEL 1 FOR 0.508;
		LEVEL 0 FOR 0.709;
		LEVEL 1 FOR 7.2;
		LEVEL 0 FOR 12.091;
		LEVEL 1 FOR 7.11;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 0.89;
		LEVEL 0 FOR 0.037;
		LEVEL 1 FOR 1.099;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.234;
			LEVEL 1 FOR 1.099;
		}
		LEVEL 0 FOR 5.657;
		LEVEL 1 FOR 3.2;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.8;
			LEVEL 1 FOR 3.2;
		}
		LEVEL 0 FOR 5.977;
		LEVEL 1 FOR 9.4;
		LEVEL 0 FOR 7.964;
		LEVEL 1 FOR 2.216;
		LEVEL 0 FOR 10.2;
		LEVEL 1 FOR 7.584;
		LEVEL 0 FOR 0.821;
		LEVEL 1 FOR 1.933;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.4;
			LEVEL 1 FOR 1.933;
		}
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.65;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.35;
			LEVEL 1 FOR 1.65;
		}
		LEVEL 0 FOR 9.579;
		LEVEL 1 FOR 9.8;
		LEVEL 0 FOR 4.551;
		LEVEL 1 FOR 1.533;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.8;
			LEVEL 1 FOR 1.533;
		}
		LEVEL 0 FOR 0.801;
		LEVEL 1 FOR 1.904;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.267;
			LEVEL 1 FOR 3.399;
		}
		LEVEL 0 FOR 3.267;
		LEVEL 1 FOR 1.497;
		LEVEL 0 FOR 2.656;
		LEVEL 1 FOR 1.95;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.05;
			LEVEL 1 FOR 1.95;
		}
		LEVEL 0 FOR 0.394;
		LEVEL 1 FOR 4.077;
		LEVEL 0 FOR 12.4;
		LEVEL 1 FOR 3.523;
		LEVEL 0 FOR 1.988;
		LEVEL 1 FOR 3.732;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.934;
			LEVEL 1 FOR 3.732;
		}
		LEVEL 0 FOR 4.805;
		LEVEL 1 FOR 2.466;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.2;
			LEVEL 1 FOR 2.466;
		}
		LEVEL 0 FOR 3.207;
		LEVEL 1 FOR 1.75;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.25;
			LEVEL 1 FOR 1.75;
		}
		LEVEL 0 FOR 2.381;
		LEVEL 1 FOR 4.4;
		LEVEL 0 FOR 3.607;
		LEVEL 1 FOR 2.352;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.55;
			LEVEL 1 FOR 2.45;
		}
		LEVEL 0 FOR 2.55;
		LEVEL 1 FOR 0.098;
		LEVEL 0 FOR 0.021;
		LEVEL 1 FOR 4.6;
		LEVEL 0 FOR 5.379;
		LEVEL 1 FOR 0.432;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.867;
			LEVEL 1 FOR 2.799;
		}
		LEVEL 0 FOR 3.867;
		LEVEL 1 FOR 2.369;
		LEVEL 0 FOR 1.54;
		LEVEL 1 FOR 0.999;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.334;
			LEVEL 1 FOR 0.999;
		}
		LEVEL 0 FOR 0.795;
		LEVEL 1 FOR 0.528;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.7;
			LEVEL 1 FOR 4.3;
		}
		LEVEL 0 FOR 5.7;
		LEVEL 1 FOR 4.148;
		LEVEL 0 FOR 3.15;
		LEVEL 1 FOR 1.85;
		LEVEL 0 FOR 3.15;
		LEVEL 1 FOR 2.285;
		LEVEL 0 FOR 6.1;
		LEVEL 1 FOR 3.9;
		LEVEL 0 FOR 6.1;
		LEVEL 1 FOR 3.089;
		LEVEL 0 FOR 1.264;
		LEVEL 1 FOR 1.533;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.8;
			LEVEL 1 FOR 1.533;
		}
		LEVEL 0 FOR 1.895;
		LEVEL 1 FOR 2.533;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.133;
			LEVEL 1 FOR 2.533;
		}
		LEVEL 0 FOR 4.663;
		LEVEL 1 FOR 1.55;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.45;
			LEVEL 1 FOR 1.55;
		}
		LEVEL 0 FOR 1.564;
		LEVEL 1 FOR 1.846;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.2;
			LEVEL 1 FOR 2.8;
		}
		LEVEL 0 FOR 2.2;
		LEVEL 1 FOR 0.954;
		LEVEL 0 FOR 0.082;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 13.918;
		LEVEL 1 FOR 1.839;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.7;
			LEVEL 1 FOR 4.3;
		}
		LEVEL 0 FOR 5.7;
		LEVEL 1 FOR 2.461;
		LEVEL 0 FOR 0.73;
		LEVEL 1 FOR 1.65;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.35;
			LEVEL 1 FOR 1.65;
		}
		LEVEL 0 FOR 6.911;
		LEVEL 1 FOR 3.4;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.6;
			LEVEL 1 FOR 3.4;
		}
		LEVEL 0 FOR 3.712;
		LEVEL 1 FOR 1.499;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.834;
			LEVEL 1 FOR 1.499;
		}
		LEVEL 0 FOR 2.496;
		LEVEL 1 FOR 2.666;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.666;
		}
		LEVEL 0 FOR 2.682;
		LEVEL 1 FOR 8.4;
		LEVEL 0 FOR 12.556;
		LEVEL 1 FOR 2.95;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.05;
			LEVEL 1 FOR 2.95;
		}
		LEVEL 0 FOR 0.572;
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 7.639;
		LEVEL 1 FOR 4.2;
		LEVEL 0 FOR 2.963;
		LEVEL 1 FOR 1.099;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.234;
			LEVEL 1 FOR 1.099;
		}
		LEVEL 0 FOR 0.211;
		LEVEL 1 FOR 2.538;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.666;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 1.854;
		LEVEL 0 FOR 5.1;
		LEVEL 1 FOR 3.176;
		LEVEL 0 FOR 11.982;
		LEVEL 1 FOR 7.4;
		LEVEL 0 FOR 0.618;
		LEVEL 1 FOR 1.954;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.666;
		}
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.793;
		LEVEL 0 FOR 4.267;
		LEVEL 1 FOR 2.399;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.267;
			LEVEL 1 FOR 2.399;
		}
		LEVEL 0 FOR 4.267;
		LEVEL 1 FOR 0.322;
		LEVEL 0 FOR 3.377;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 2.623;
		LEVEL 1 FOR 0.707;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.5;
			LEVEL 1 FOR 1.5;
		}
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 1.386;
		LEVEL 0 FOR 2.167;
		LEVEL 1 FOR 1.166;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.167;
			LEVEL 1 FOR 1.166;
		}
		LEVEL 0 FOR 2.167;
		LEVEL 1 FOR 0.574;
		LEVEL 0 FOR 0.463;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 15.294;
		LEVEL 1 FOR 4.4;
		LEVEL 0 FOR 1.843;
		LEVEL 1 FOR 0.392;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.333;
			LEVEL 1 FOR 2.333;
		}
		LEVEL 0 FOR 4.333;
		LEVEL 1 FOR 9.019;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 12.245;
		LEVEL 0 FOR 9.4;
		LEVEL 1 FOR 1.279;
		LEVEL 0 FOR 0.019;
		LEVEL 1 FOR 1.766;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.567;
			LEVEL 1 FOR 1.766;
		}
		LEVEL 0 FOR 1.549;
		LEVEL 1 FOR 0.014;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.4;
			LEVEL 1 FOR 3.266;
		}
		LEVEL 0 FOR 3.4;
		LEVEL 1 FOR 3.254;
		LEVEL 0 FOR 1.472;
		LEVEL 1 FOR 3.5;
		LEVEL 0 FOR 13.703;
		LEVEL 1 FOR 9.6;
		LEVEL 0 FOR 1.725;
	}
}

TRANSITION_LIST("V[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3.839;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.2;
			LEVEL 1 FOR 5.8;
		}
		LEVEL 0 FOR 4.2;
		LEVEL 1 FOR 1.961;
		LEVEL 0 FOR 4.721;
		LEVEL 1 FOR 6.4;
		LEVEL 0 FOR 10.331;
		LEVEL 1 FOR 1.566;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.767;
			LEVEL 1 FOR 1.566;
		}
		LEVEL 0 FOR 4.453;
		LEVEL 1 FOR 4.9;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.1;
			LEVEL 1 FOR 4.9;
		}
		LEVEL 0 FOR 2.012;
		LEVEL 1 FOR 1.333;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 1.333;
		}
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.699;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.634;
			LEVEL 1 FOR 1.699;
		}
		LEVEL 0 FOR 0.728;
		LEVEL 1 FOR 5.8;
		LEVEL 0 FOR 5.267;
		LEVEL 1 FOR 3.9;
		LEVEL 0 FOR 4.392;
		LEVEL 1 FOR 0.957;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.7;
			LEVEL 1 FOR 4.3;
		}
		LEVEL 0 FOR 5.7;
		LEVEL 1 FOR 3.343;
		LEVEL 0 FOR 2.74;
		LEVEL 1 FOR 1.9;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.1;
			LEVEL 1 FOR 1.9;
		}
		LEVEL 0 FOR 2.252;
		LEVEL 1 FOR 1.95;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.05;
			LEVEL 1 FOR 1.95;
		}
		LEVEL 0 FOR 1.565;
		LEVEL 1 FOR 3.199;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.467;
			LEVEL 1 FOR 3.199;
		}
		LEVEL 0 FOR 3.577;
		LEVEL 1 FOR 1.65;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.35;
			LEVEL 1 FOR 1.65;
		}
		LEVEL 0 FOR 2.835;
		LEVEL 1 FOR 0.272;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.967;
			LEVEL 1 FOR 1.366;
		}
		LEVEL 0 FOR 1.967;
		LEVEL 1 FOR 2.928;
		LEVEL 0 FOR 4.533;
		LEVEL 1 FOR 2.133;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.533;
			LEVEL 1 FOR 2.133;
		}
		LEVEL 0 FOR 4.533;
		LEVEL 1 FOR 7.429;
		LEVEL 0 FOR 10.2;
		LEVEL 1 FOR 2.673;
		LEVEL 0 FOR 0.803;
		LEVEL 1 FOR 1.999;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.334;
			LEVEL 1 FOR 1.999;
		}
		LEVEL 0 FOR 1.871;
		LEVEL 1 FOR 9.6;
		LEVEL 0 FOR 9.061;
		LEVEL 1 FOR 2.475;
		LEVEL 0 FOR 9.4;
		LEVEL 1 FOR 8.125;
		LEVEL 0 FOR 10.708;
		LEVEL 1 FOR 6.6;
		LEVEL 0 FOR 3.511;
		LEVEL 1 FOR 2.75;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.25;
			LEVEL 1 FOR 2.75;
		}
		LEVEL 0 FOR 1.431;
		LEVEL 1 FOR 0.667;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 3.0;
		}
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 13.051;
		LEVEL 0 FOR 9.0;
		LEVEL 1 FOR 0.282;
		LEVEL 0 FOR 1.291;
		LEVEL 1 FOR 2.9;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.1;
			LEVEL 1 FOR 2.9;
		}
		LEVEL 0 FOR 3.959;
		LEVEL 1 FOR 7.8;
		LEVEL 0 FOR 10.118;
		LEVEL 1 FOR 3.1;
		LEVEL 0 FOR 5.832;
		LEVEL 1 FOR 0.713;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.35;
			LEVEL 1 FOR 2.65;
		}
		LEVEL 0 FOR 2.35;
		LEVEL 1 FOR 1.937;
		LEVEL 0 FOR 1.216;
		LEVEL 1 FOR 1.833;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.5;
			LEVEL 1 FOR 1.833;
		}
		LEVEL 0 FOR 0.285;
		LEVEL 1 FOR 0.139;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.134;
			LEVEL 1 FOR 1.199;
		}
		LEVEL 0 FOR 2.134;
		LEVEL 1 FOR 1.061;
		LEVEL 0 FOR 0.693;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 11.307;
		LEVEL 1 FOR 0.453;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 5.547;
		LEVEL 0 FOR 2.584;
		LEVEL 1 FOR 4.2;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.8;
			LEVEL 1 FOR 4.2;
		}
		LEVEL 0 FOR 3.216;
		LEVEL 1 FOR 1.986;
		LEVEL 0 FOR 5.3;
		LEVEL 1 FOR 3.661;
		LEVEL 0 FOR 2.734;
		LEVEL 1 FOR 3.932;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.734;
			LEVEL 1 FOR 3.932;
		}
		LEVEL 0 FOR 2.734;
		LEVEL 1 FOR 2.987;
		LEVEL 0 FOR 9.963;
		LEVEL 1 FOR 7.6;
		LEVEL 0 FOR 3.73;
		LEVEL 1 FOR 4.9;
		LEVEL 0 FOR 4.099;
		LEVEL 1 FOR 1.199;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.134;
			LEVEL 1 FOR 1.199;
		}
		LEVEL 0 FOR 5.033;
		LEVEL 1 FOR 4.6;
		LEVEL 0 FOR 2.21;
		LEVEL 1 FOR 11.7;
		LEVEL 0 FOR 8.2;
		LEVEL 1 FOR 0.223;
		LEVEL 0 FOR 2.1;
		LEVEL 1 FOR 1.233;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.1;
			LEVEL 1 FOR 1.233;
		}
		LEVEL 0 FOR 2.1;
		LEVEL 1 FOR 1.111;
		LEVEL 0 FOR 0.706;
		LEVEL 1 FOR 1.766;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.567;
			LEVEL 1 FOR 1.766;
		}
		LEVEL 0 FOR 5.839;
		LEVEL 1 FOR 4.3;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.7;
			LEVEL 1 FOR 4.3;
		}
		LEVEL 0 FOR 0.773;
		LEVEL 1 FOR 1.399;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.934;
			LEVEL 1 FOR 1.399;
		}
		LEVEL 0 FOR 3.224;
		LEVEL 1 FOR 2.7;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.3;
			LEVEL 1 FOR 2.7;
		}
		LEVEL 0 FOR 0.961;
		LEVEL 1 FOR 1.109;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.034;
			LEVEL 1 FOR 1.299;
		}
		LEVEL 0 FOR 2.034;
		LEVEL 1 FOR 0.191;
		LEVEL 0 FOR 3.367;
		LEVEL 1 FOR 1.6;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.4;
			LEVEL 1 FOR 1.6;
		}
		LEVEL 0 FOR 0.436;
		LEVEL 1 FOR 10.8;
		LEVEL 0 FOR 8.797;
		LEVEL 1 FOR 6.351;
		LEVEL 0 FOR 8.8;
		LEVEL 1 FOR 4.849;
		LEVEL 0 FOR 2.32;
		LEVEL 1 FOR 2.733;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.933;
			LEVEL 1 FOR 2.733;
		}
		LEVEL 0 FOR 1.834;
		LEVEL 1 FOR 1.65;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.35;
			LEVEL 1 FOR 1.65;
		}
		LEVEL 0 FOR 3.131;
		LEVEL 1 FOR 2.459;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.067;
			LEVEL 1 FOR 2.599;
		}
		LEVEL 0 FOR 4.067;
		LEVEL 1 FOR 0.953;
		LEVEL 0 FOR 2.8;
		LEVEL 1 FOR 2.2;
		LEVEL 0 FOR 2.8;
		LEVEL 1 FOR 1.389;
		LEVEL 0 FOR 1.557;
		LEVEL 1 FOR 2.599;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.067;
			LEVEL 1 FOR 2.599;
		}
		LEVEL 0 FOR 2.512;
		LEVEL 1 FOR 1.391;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.2;
			LEVEL 1 FOR 2.8;
		}
		LEVEL 0 FOR 2.2;
		LEVEL 1 FOR 1.409;
		LEVEL 0 FOR 1.433;
		LEVEL 1 FOR 2.05;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.95;
			LEVEL 1 FOR 2.05;
		}
		LEVEL 0 FOR 4.489;
		LEVEL 1 FOR 3.8;
		LEVEL 0 FOR 4.271;
		LEVEL 1 FOR 2.999;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.667;
			LEVEL 1 FOR 2.999;
		}
		LEVEL 0 FOR 4.428;
		LEVEL 1 FOR 1.55;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.45;
			LEVEL 1 FOR 1.55;
		}
		LEVEL 0 FOR 1.648;
		LEVEL 1 FOR 0.082;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.5;
			LEVEL 1 FOR 4.5;
		}
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 4.418;
		LEVEL 0 FOR 1.126;
		LEVEL 1 FOR 0.999;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.334;
			LEVEL 1 FOR 0.999;
		}
		LEVEL 0 FOR 1.209;
		LEVEL 1 FOR 2.97;
		LEVEL 0 FOR 4.2;
		LEVEL 1 FOR 2.83;
		LEVEL 0 FOR 11.127;
		LEVEL 1 FOR 6.8;
		LEVEL 0 FOR 3.579;
		LEVEL 1 FOR 1.533;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.8;
			LEVEL 1 FOR 1.533;
		}
		LEVEL 0 FOR 0.681;
		LEVEL 1 FOR 3.133;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.533;
			LEVEL 1 FOR 3.133;
		}
		LEVEL 0 FOR 3.149;
		LEVEL 1 FOR 9.273;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 1.549;
		LEVEL 0 FOR 5.3;
		LEVEL 1 FOR 4.7;
		LEVEL 0 FOR 5.3;
		LEVEL 1 FOR 3.878;
		LEVEL 0 FOR 1.3;
		LEVEL 1 FOR 2.533;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.133;
			LEVEL 1 FOR 2.533;
		}
		LEVEL 0 FOR 2.835;
		LEVEL 1 FOR 1.596;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.133;
			LEVEL 1 FOR 2.533;
		}
		LEVEL 0 FOR 4.133;
		LEVEL 1 FOR 0.939;
	}
}

TRANSITION_LIST("V[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4.883;
		LEVEL 0 FOR 12.8;
		LEVEL 1 FOR 2.317;
		LEVEL 0 FOR 3.03;
		LEVEL 1 FOR 3.8;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.2;
			LEVEL 1 FOR 3.8;
		}
		LEVEL 0 FOR 3.17;
		LEVEL 1 FOR 1.014;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.334;
			LEVEL 1 FOR 1.999;
		}
		LEVEL 0 FOR 1.334;
		LEVEL 1 FOR 3.269;
		LEVEL 0 FOR 2.3;
		LEVEL 1 FOR 2.7;
		LEVEL 0 FOR 2.3;
		LEVEL 1 FOR 0.417;
		LEVEL 0 FOR 1.157;
		LEVEL 1 FOR 3.3;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.7;
			LEVEL 1 FOR 3.3;
		}
		LEVEL 0 FOR 5.624;
		LEVEL 1 FOR 2.15;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.85;
			LEVEL 1 FOR 2.15;
		}
		LEVEL 0 FOR 2.769;
		LEVEL 1 FOR 0.945;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.767;
			LEVEL 1 FOR 1.566;
		}
		LEVEL 0 FOR 1.767;
		LEVEL 1 FOR 0.622;
		LEVEL 0 FOR 4.198;
		LEVEL 1 FOR 2.266;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.4;
			LEVEL 1 FOR 2.266;
		}
		LEVEL 0 FOR 0.204;
		LEVEL 1 FOR 1.111;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.034;
			LEVEL 1 FOR 1.299;
		}
		LEVEL 0 FOR 2.034;
		LEVEL 1 FOR 0.189;
		LEVEL 0 FOR 0.52;
		LEVEL 1 FOR 2.3;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.7;
			LEVEL 1 FOR 2.3;
		}
		LEVEL 0 FOR 3.503;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 3.677;
		LEVEL 1 FOR 0.722;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.467;
			LEVEL 1 FOR 2.199;
		}
		LEVEL 0 FOR 4.467;
		LEVEL 1 FOR 5.89;
		LEVEL 0 FOR 5.4;
		LEVEL 1 FOR 0.189;
		LEVEL 0 FOR 4.932;
		LEVEL 1 FOR 3.6;
		LEVEL 0 FOR 5.097;
		LEVEL 1 FOR 2.799;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.867;
			LEVEL 1 FOR 2.799;
		}
		LEVEL 0 FOR 0.24;
		LEVEL 1 FOR 3.662;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.8;
			LEVEL 1 FOR 5.2;
		}
		LEVEL 0 FOR 4.8;
		LEVEL 1 FOR 1.538;
		LEVEL 0 FOR 4.677;
		LEVEL 1 FOR 3.7;
		LEVEL 0 FOR 1.868;
		LEVEL 1 FOR 1.199;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.134;
			LEVEL 1 FOR 1.199;
		}
		LEVEL 0 FOR 1.89;
		LEVEL 1 FOR 0.076;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.924;
		LEVEL 0 FOR 0.052;
		LEVEL 1 FOR 1.666;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.667;
			LEVEL 1 FOR 1.666;
		}
		LEVEL 0 FOR 4.151;
		LEVEL 1 FOR 3.6;
		LEVEL 0 FOR 4.935;
		LEVEL 1 FOR 2.666;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.666;
		}
		LEVEL 0 FOR 7.836;
		LEVEL 1 FOR 7.6;
		LEVEL 0 FOR 10.157;
		LEVEL 1 FOR 4.4;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.6;
			LEVEL 1 FOR 4.4;
		}
		LEVEL 0 FOR 7.86;
		LEVEL 1 FOR 3.5;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.5;
			LEVEL 1 FOR 3.5;
		}
		LEVEL 0 FOR 2.675;
		LEVEL 1 FOR 2.95;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.05;
			LEVEL 1 FOR 2.95;
		}
		LEVEL 0 FOR 0.954;
		LEVEL 1 FOR 0.581;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.35;
			LEVEL 1 FOR 2.65;
		}
		LEVEL 0 FOR 2.35;
		LEVEL 1 FOR 2.069;
		LEVEL 0 FOR 3.686;
		LEVEL 1 FOR 5.3;
		LEVEL 0 FOR 1.014;
		LEVEL 1 FOR 1.073;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.933;
			LEVEL 1 FOR 2.733;
		}
		LEVEL 0 FOR 3.933;
		LEVEL 1 FOR 6.541;
		LEVEL 0 FOR 10.8;
		LEVEL 1 FOR 4.321;
		LEVEL 0 FOR 2.877;
		LEVEL 1 FOR 4.6;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.4;
			LEVEL 1 FOR 4.6;
		}
		LEVEL 0 FOR 2.523;
		LEVEL 1 FOR 0.216;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.533;
			LEVEL 1 FOR 2.133;
		}
		LEVEL 0 FOR 4.533;
		LEVEL 1 FOR 4.311;
		LEVEL 0 FOR 11.4;
		LEVEL 1 FOR 6.802;
		LEVEL 0 FOR 11.4;
		LEVEL 1 FOR 9.165;
		LEVEL 0 FOR 6.7;
		LEVEL 1 FOR 3.3;
		LEVEL 0 FOR 6.7;
		LEVEL 1 FOR 2.141;
		LEVEL 0 FOR 0.463;
		LEVEL 1 FOR 1.6;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.4;
			LEVEL 1 FOR 1.6;
		}
		LEVEL 0 FOR 4.547;
		LEVEL 1 FOR 5.7;
		LEVEL 0 FOR 6.956;
		LEVEL 1 FOR 3.9;
		LEVEL 0 FOR 1.834;
		LEVEL 1 FOR 0.755;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.934;
			LEVEL 1 FOR 1.399;
		}
		LEVEL 0 FOR 1.934;
		LEVEL 1 FOR 0.931;
		LEVEL 0 FOR 2.134;
		LEVEL 1 FOR 1.199;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.134;
			LEVEL 1 FOR 1.199;
		}
		LEVEL 0 FOR 2.134;
		LEVEL 1 FOR 0.914;
		LEVEL 0 FOR 2.017;
		LEVEL 1 FOR 9.4;
		LEVEL 0 FOR 8.583;
		LEVEL 1 FOR 1.853;
		LEVEL 0 FOR 9.2;
		LEVEL 1 FOR 8.947;
		LEVEL 0 FOR 1.316;
		LEVEL 1 FOR 1.533;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.8;
			LEVEL 1 FOR 1.533;
		}
		LEVEL 0 FOR 0.485;
		LEVEL 1 FOR 0.75;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 2.75;
		LEVEL 0 FOR 1.449;
		LEVEL 1 FOR 4.8;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.2;
			LEVEL 1 FOR 4.8;
		}
		LEVEL 0 FOR 3.751;
		LEVEL 1 FOR 2.824;
		LEVEL 0 FOR 9.4;
		LEVEL 1 FOR 8.938;
		LEVEL 0 FOR 5.6;
		LEVEL 1 FOR 4.4;
		LEVEL 0 FOR 5.6;
		LEVEL 1 FOR 3.238;
		LEVEL 0 FOR 2.643;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.5;
			LEVEL 1 FOR 1.5;
		}
		LEVEL 0 FOR 0.857;
		LEVEL 1 FOR 4.4;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.1;
			LEVEL 1 FOR 4.9;
		}
		LEVEL 0 FOR 5.1;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.352;
		LEVEL 1 FOR 2.6;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.6;
		}
		LEVEL 0 FOR 6.867;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 7.181;
		LEVEL 1 FOR 0.077;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.15;
			LEVEL 1 FOR 1.85;
		}
		LEVEL 0 FOR 3.15;
		LEVEL 1 FOR 1.773;
		LEVEL 0 FOR 1.768;
		LEVEL 1 FOR 1.399;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.934;
			LEVEL 1 FOR 1.399;
		}
		LEVEL 0 FOR 0.167;
		LEVEL 1 FOR 4.446;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 1.393;
		LEVEL 0 FOR 1.667;
		LEVEL 1 FOR 1.666;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1.667;
			LEVEL 1 FOR 1.666;
		}
		LEVEL 0 FOR 1.667;
		LEVEL 1 FOR 0.828;
		LEVEL 0 FOR 1.138;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9.888;
		LEVEL 1 FOR 5.3;
		LEVEL 0 FOR 3.674;
		LEVEL 1 FOR 1.178;
		LEVEL 0 FOR 6.3;
		LEVEL 1 FOR 5.159;
		LEVEL 0 FOR 6.7;
		LEVEL 1 FOR 0.663;
		LEVEL 0 FOR 1.172;
		LEVEL 1 FOR 2.533;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.133;
			LEVEL 1 FOR 2.533;
		}
		LEVEL 0 FOR 2.963;
		LEVEL 1 FOR 3.319;
		LEVEL 0 FOR 6.3;
		LEVEL 1 FOR 0.395;
		LEVEL 0 FOR 6.8;
		LEVEL 1 FOR 3.186;
		LEVEL 0 FOR 4.417;
		LEVEL 1 FOR 6.4;
		LEVEL 0 FOR 9.64;
		LEVEL 1 FOR 2.65;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.35;
			LEVEL 1 FOR 2.65;
		}
		LEVEL 0 FOR 2.865;
		LEVEL 1 FOR 1.75;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.25;
			LEVEL 1 FOR 1.75;
		}
		LEVEL 0 FOR 3.439;
		LEVEL 1 FOR 2.05;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.95;
			LEVEL 1 FOR 2.05;
		}
		LEVEL 0 FOR 1.789;
		LEVEL 1 FOR 3.334;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.734;
			LEVEL 1 FOR 3.932;
		}
		LEVEL 0 FOR 2.734;
		LEVEL 1 FOR 5.577;
		LEVEL 0 FOR 4.5;
		LEVEL 1 FOR 5.5;
		LEVEL 0 FOR 4.5;
		LEVEL 1 FOR 0.796;
		LEVEL 0 FOR 2.85;
		LEVEL 1 FOR 2.15;
		LEVEL 0 FOR 2.85;
		LEVEL 1 FOR 1.877;
	}
}

DISPLAY_LINE
{
	CHANNEL = "A";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4;
}

DISPLAY_LINE
{
	CHANNEL = "A[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "B";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	CHILDREN = 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "B[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "B[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "B[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "B[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "C";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12, 13, 14;
}

DISPLAY_LINE
{
	CHANNEL = "C[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "C[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "C[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "C[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "D";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
	CHILDREN = 17, 18, 19, 20;
}

DISPLAY_LINE
{
	CHANNEL = "D[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "D[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "D[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "D[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "IN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
	CHILDREN = 22, 23, 24, 25;
}

DISPLAY_LINE
{
	CHANNEL = "IN[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "IN[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "IN[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "IN[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "Operandtwo";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 0;
	CHILDREN = 27, 28, 29, 30;
}

DISPLAY_LINE
{
	CHANNEL = "Operandtwo[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "Operandtwo[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "Operandtwo[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "Operandtwo[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "Opernadone";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
	CHILDREN = 32, 33, 34, 35;
}

DISPLAY_LINE
{
	CHANNEL = "Opernadone[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "Opernadone[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "Opernadone[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "Opernadone[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "ORA";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
	CHILDREN = 37, 38, 39, 40;
}

DISPLAY_LINE
{
	CHANNEL = "ORA[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "ORA[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "ORA[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "ORA[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "ORB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 0;
	CHILDREN = 42, 43, 44, 45;
}

DISPLAY_LINE
{
	CHANNEL = "ORB[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "ORB[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "ORB[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "ORB[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "ORC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 0;
	CHILDREN = 47, 48, 49, 50;
}

DISPLAY_LINE
{
	CHANNEL = "ORC[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "ORC[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "ORC[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "ORC[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "SA";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 51;
	TREE_LEVEL = 0;
	CHILDREN = 52, 53;
}

DISPLAY_LINE
{
	CHANNEL = "SA[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "SA[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "Sone";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 54;
	TREE_LEVEL = 0;
	CHILDREN = 55, 56;
}

DISPLAY_LINE
{
	CHANNEL = "Sone[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Sone[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "SSB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 57;
	TREE_LEVEL = 0;
	CHILDREN = 58, 59;
}

DISPLAY_LINE
{
	CHANNEL = "SSB[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "SSB[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "Stwo";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 60;
	TREE_LEVEL = 0;
	CHILDREN = 61, 62;
}

DISPLAY_LINE
{
	CHANNEL = "Stwo[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "Stwo[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "V";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 63;
	TREE_LEVEL = 0;
	CHILDREN = 64, 65, 66, 67;
}

DISPLAY_LINE
{
	CHANNEL = "V[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "V[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "V[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "V[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 63;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
