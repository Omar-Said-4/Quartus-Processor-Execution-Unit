// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "10/17/2022 16:33:02"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Block2a
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Block2a_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLK;
reg [3:0] IN;
reg [1:0] Sone;
reg [1:0] Stwo;
reg [3:0] V;
// wires                                               
wire [3:0] Operandtwo;
wire [3:0] Opernadone;
wire [3:0] ORA;
wire [3:0] ORB;
wire [3:0] ORC;

// assign statements (if any)                          
Block2a i1 (
// port map - connection between master ports and signals/registers   
	.CLK(CLK),
	.IN(IN),
	.Operandtwo(Operandtwo),
	.Opernadone(Opernadone),
	.ORA(ORA),
	.ORB(ORB),
	.ORC(ORC),
	.Sone(Sone),
	.Stwo(Stwo),
	.V(V)
);
initial 
begin 
#1000000 $finish;
end 

// CLK
always
begin
	CLK = 1'b0;
	CLK = #5000 1'b1;
	#5000;
end 
// IN[ 3 ]
initial
begin
	IN[3] = 1'b1;
	IN[3] = #30000 1'b0;
	IN[3] = #20000 1'b1;
	IN[3] = #20000 1'b0;
	IN[3] = #30000 1'b1;
	IN[3] = #20000 1'b0;
	IN[3] = #20000 1'b1;
	IN[3] = #30000 1'b0;
	IN[3] = #10000 1'b1;
	IN[3] = #10000 1'b0;
	IN[3] = #10000 1'b1;
	IN[3] = #10000 1'b0;
	IN[3] = #10000 1'b1;
	IN[3] = #30000 1'b0;
	IN[3] = #10000 1'b1;
	IN[3] = #10000 1'b0;
	IN[3] = #40000 1'b1;
	IN[3] = #20000 1'b0;
	IN[3] = #10000 1'b1;
	IN[3] = #10000 1'b0;
	IN[3] = #10000 1'b1;
	IN[3] = #20000 1'b0;
	IN[3] = #10000 1'b1;
	IN[3] = #10000 1'b0;
	IN[3] = #30000 1'b1;
	IN[3] = #10000 1'b0;
	IN[3] = #10000 1'b1;
	IN[3] = #30000 1'b0;
	IN[3] = #20000 1'b1;
	IN[3] = #30000 1'b0;
	IN[3] = #10000 1'b1;
	IN[3] = #30000 1'b0;
	IN[3] = #10000 1'b1;
	IN[3] = #20000 1'b0;
	IN[3] = #20000 1'b1;
	IN[3] = #10000 1'b0;
	IN[3] = #10000 1'b1;
	IN[3] = #10000 1'b0;
	IN[3] = #40000 1'b1;
	IN[3] = #30000 1'b0;
	IN[3] = #10000 1'b1;
	IN[3] = #10000 1'b0;
	IN[3] = #20000 1'b1;
	IN[3] = #10000 1'b0;
	IN[3] = #10000 1'b1;
	IN[3] = #50000 1'b0;
	IN[3] = #10000 1'b1;
	IN[3] = #20000 1'b0;
	IN[3] = #60000 1'b1;
	IN[3] = #40000 1'b0;
	IN[3] = #20000 1'b1;
	IN[3] = #10000 1'b0;
end 
// IN[ 2 ]
initial
begin
	IN[2] = 1'b1;
	IN[2] = #40000 1'b0;
	IN[2] = #10000 1'b1;
	IN[2] = #10000 1'b0;
	IN[2] = #50000 1'b1;
	IN[2] = #20000 1'b0;
	IN[2] = #10000 1'b1;
	IN[2] = #50000 1'b0;
	IN[2] = #20000 1'b1;
	IN[2] = #40000 1'b0;
	IN[2] = #10000 1'b1;
	IN[2] = #10000 1'b0;
	IN[2] = #20000 1'b1;
	IN[2] = #30000 1'b0;
	IN[2] = #30000 1'b1;
	IN[2] = #40000 1'b0;
	IN[2] = #10000 1'b1;
	IN[2] = #10000 1'b0;
	IN[2] = #10000 1'b1;
	IN[2] = #30000 1'b0;
	IN[2] = #20000 1'b1;
	IN[2] = #20000 1'b0;
	IN[2] = #10000 1'b1;
	IN[2] = #10000 1'b0;
	IN[2] = #10000 1'b1;
	IN[2] = #10000 1'b0;
	IN[2] = #10000 1'b1;
	IN[2] = #20000 1'b0;
	IN[2] = #30000 1'b1;
	IN[2] = #20000 1'b0;
	IN[2] = #20000 1'b1;
	IN[2] = #40000 1'b0;
	IN[2] = #20000 1'b1;
	IN[2] = #20000 1'b0;
	IN[2] = #20000 1'b1;
	IN[2] = #10000 1'b0;
	IN[2] = #10000 1'b1;
	IN[2] = #60000 1'b0;
	IN[2] = #20000 1'b1;
	IN[2] = #20000 1'b0;
	IN[2] = #10000 1'b1;
	IN[2] = #10000 1'b0;
	IN[2] = #10000 1'b1;
	IN[2] = #10000 1'b0;
	IN[2] = #10000 1'b1;
	IN[2] = #20000 1'b0;
	IN[2] = #20000 1'b1;
	IN[2] = #10000 1'b0;
	IN[2] = #20000 1'b1;
	IN[2] = #20000 1'b0;
end 
// IN[ 1 ]
initial
begin
	IN[1] = 1'b1;
	IN[1] = #10000 1'b0;
	IN[1] = #30000 1'b1;
	IN[1] = #10000 1'b0;
	IN[1] = #20000 1'b1;
	IN[1] = #20000 1'b0;
	IN[1] = #20000 1'b1;
	IN[1] = #20000 1'b0;
	IN[1] = #10000 1'b1;
	IN[1] = #20000 1'b0;
	IN[1] = #20000 1'b1;
	IN[1] = #10000 1'b0;
	IN[1] = #70000 1'b1;
	IN[1] = #10000 1'b0;
	IN[1] = #10000 1'b1;
	IN[1] = #10000 1'b0;
	IN[1] = #20000 1'b1;
	IN[1] = #10000 1'b0;
	IN[1] = #60000 1'b1;
	IN[1] = #10000 1'b0;
	IN[1] = #10000 1'b1;
	IN[1] = #20000 1'b0;
	IN[1] = #10000 1'b1;
	IN[1] = #40000 1'b0;
	IN[1] = #30000 1'b1;
	IN[1] = #80000 1'b0;
	IN[1] = #10000 1'b1;
	IN[1] = #10000 1'b0;
	IN[1] = #20000 1'b1;
	IN[1] = #30000 1'b0;
	IN[1] = #10000 1'b1;
	IN[1] = #10000 1'b0;
	IN[1] = #60000 1'b1;
	IN[1] = #10000 1'b0;
	IN[1] = #60000 1'b1;
	IN[1] = #20000 1'b0;
	IN[1] = #20000 1'b1;
	IN[1] = #10000 1'b0;
	IN[1] = #20000 1'b1;
	IN[1] = #20000 1'b0;
	IN[1] = #10000 1'b1;
	IN[1] = #20000 1'b0;
	IN[1] = #10000 1'b1;
	IN[1] = #20000 1'b0;
	IN[1] = #20000 1'b1;
end 
// IN[ 0 ]
initial
begin
	IN[0] = 1'b0;
	IN[0] = #10000 1'b1;
	IN[0] = #10000 1'b0;
	IN[0] = #20000 1'b1;
	IN[0] = #10000 1'b0;
	IN[0] = #20000 1'b1;
	IN[0] = #50000 1'b0;
	IN[0] = #20000 1'b1;
	IN[0] = #30000 1'b0;
	IN[0] = #10000 1'b1;
	IN[0] = #10000 1'b0;
	IN[0] = #10000 1'b1;
	IN[0] = #10000 1'b0;
	IN[0] = #10000 1'b1;
	IN[0] = #20000 1'b0;
	IN[0] = #10000 1'b1;
	IN[0] = #10000 1'b0;
	IN[0] = #10000 1'b1;
	IN[0] = #10000 1'b0;
	IN[0] = #10000 1'b1;
	IN[0] = #40000 1'b0;
	IN[0] = #10000 1'b1;
	IN[0] = #20000 1'b0;
	IN[0] = #20000 1'b1;
	IN[0] = #10000 1'b0;
	IN[0] = #10000 1'b1;
	IN[0] = #30000 1'b0;
	IN[0] = #20000 1'b1;
	IN[0] = #40000 1'b0;
	IN[0] = #30000 1'b1;
	IN[0] = #20000 1'b0;
	IN[0] = #10000 1'b1;
	IN[0] = #10000 1'b0;
	IN[0] = #10000 1'b1;
	IN[0] = #20000 1'b0;
	IN[0] = #20000 1'b1;
	IN[0] = #10000 1'b0;
	IN[0] = #10000 1'b1;
	IN[0] = #30000 1'b0;
	IN[0] = #10000 1'b1;
	IN[0] = #40000 1'b0;
	IN[0] = #20000 1'b1;
	IN[0] = #10000 1'b0;
	IN[0] = #10000 1'b1;
	IN[0] = #10000 1'b0;
	IN[0] = #30000 1'b1;
	IN[0] = #60000 1'b0;
	IN[0] = #10000 1'b1;
	IN[0] = #10000 1'b0;
	IN[0] = #30000 1'b1;
	IN[0] = #10000 1'b0;
	IN[0] = #20000 1'b1;
	IN[0] = #30000 1'b0;
	IN[0] = #10000 1'b1;
	IN[0] = #10000 1'b0;
end 
// Sone[ 1 ]
initial
begin
	Sone[1] = 1'b1;
	Sone[1] = #30000 1'b0;
	Sone[1] = #20000 1'b1;
	Sone[1] = #20000 1'b0;
	Sone[1] = #10000 1'b1;
	Sone[1] = #30000 1'b0;
	Sone[1] = #40000 1'b1;
	Sone[1] = #10000 1'b0;
	Sone[1] = #30000 1'b1;
	Sone[1] = #10000 1'b0;
	Sone[1] = #10000 1'b1;
	Sone[1] = #10000 1'b0;
	Sone[1] = #10000 1'b1;
	Sone[1] = #10000 1'b0;
	Sone[1] = #10000 1'b1;
	Sone[1] = #10000 1'b0;
	Sone[1] = #10000 1'b1;
	Sone[1] = #10000 1'b0;
	Sone[1] = #10000 1'b1;
	Sone[1] = #10000 1'b0;
	Sone[1] = #10000 1'b1;
	Sone[1] = #20000 1'b0;
	Sone[1] = #30000 1'b1;
	Sone[1] = #30000 1'b0;
	Sone[1] = #10000 1'b1;
	Sone[1] = #10000 1'b0;
	Sone[1] = #30000 1'b1;
	Sone[1] = #20000 1'b0;
	Sone[1] = #20000 1'b1;
	Sone[1] = #40000 1'b0;
	Sone[1] = #40000 1'b1;
	Sone[1] = #20000 1'b0;
	Sone[1] = #20000 1'b1;
	Sone[1] = #10000 1'b0;
	Sone[1] = #40000 1'b1;
	Sone[1] = #30000 1'b0;
	Sone[1] = #10000 1'b1;
	Sone[1] = #30000 1'b0;
	Sone[1] = #10000 1'b1;
	Sone[1] = #10000 1'b0;
	Sone[1] = #60000 1'b1;
	Sone[1] = #20000 1'b0;
	Sone[1] = #50000 1'b1;
	Sone[1] = #10000 1'b0;
	Sone[1] = #10000 1'b1;
	Sone[1] = #40000 1'b0;
	Sone[1] = #10000 1'b1;
	Sone[1] = #10000 1'b0;
	Sone[1] = #10000 1'b1;
	Sone[1] = #30000 1'b0;
end 
// Sone[ 0 ]
initial
begin
	Sone[0] = 1'b0;
	Sone[0] = #10000 1'b1;
	Sone[0] = #10000 1'b0;
	Sone[0] = #40000 1'b1;
	Sone[0] = #20000 1'b0;
	Sone[0] = #10000 1'b1;
	Sone[0] = #10000 1'b0;
	Sone[0] = #50000 1'b1;
	Sone[0] = #10000 1'b0;
	Sone[0] = #10000 1'b1;
	Sone[0] = #10000 1'b0;
	Sone[0] = #10000 1'b1;
	Sone[0] = #10000 1'b0;
	Sone[0] = #10000 1'b1;
	Sone[0] = #20000 1'b0;
	Sone[0] = #10000 1'b1;
	Sone[0] = #40000 1'b0;
	Sone[0] = #30000 1'b1;
	Sone[0] = #40000 1'b0;
	Sone[0] = #40000 1'b1;
	Sone[0] = #10000 1'b0;
	Sone[0] = #10000 1'b1;
	Sone[0] = #30000 1'b0;
	Sone[0] = #30000 1'b1;
	Sone[0] = #40000 1'b0;
	Sone[0] = #30000 1'b1;
	Sone[0] = #10000 1'b0;
	Sone[0] = #10000 1'b1;
	Sone[0] = #50000 1'b0;
	Sone[0] = #20000 1'b1;
	Sone[0] = #40000 1'b0;
	Sone[0] = #10000 1'b1;
	Sone[0] = #40000 1'b0;
	Sone[0] = #10000 1'b1;
	Sone[0] = #20000 1'b0;
	Sone[0] = #20000 1'b1;
	Sone[0] = #10000 1'b0;
	Sone[0] = #10000 1'b1;
	Sone[0] = #10000 1'b0;
	Sone[0] = #30000 1'b1;
	Sone[0] = #10000 1'b0;
	Sone[0] = #40000 1'b1;
	Sone[0] = #10000 1'b0;
	Sone[0] = #20000 1'b1;
	Sone[0] = #10000 1'b0;
	Sone[0] = #10000 1'b1;
	Sone[0] = #10000 1'b0;
	Sone[0] = #20000 1'b1;
end 
// Stwo[ 1 ]
initial
begin
	Stwo[1] = 1'b1;
	Stwo[1] = #30000 1'b0;
	Stwo[1] = #10000 1'b1;
	Stwo[1] = #50000 1'b0;
	Stwo[1] = #10000 1'b1;
	Stwo[1] = #10000 1'b0;
	Stwo[1] = #30000 1'b1;
	Stwo[1] = #40000 1'b0;
	Stwo[1] = #20000 1'b1;
	Stwo[1] = #20000 1'b0;
	Stwo[1] = #20000 1'b1;
	Stwo[1] = #10000 1'b0;
	Stwo[1] = #40000 1'b1;
	Stwo[1] = #40000 1'b0;
	Stwo[1] = #20000 1'b1;
	Stwo[1] = #10000 1'b0;
	Stwo[1] = #10000 1'b1;
	Stwo[1] = #30000 1'b0;
	Stwo[1] = #10000 1'b1;
	Stwo[1] = #10000 1'b0;
	Stwo[1] = #20000 1'b1;
	Stwo[1] = #10000 1'b0;
	Stwo[1] = #10000 1'b1;
	Stwo[1] = #60000 1'b0;
	Stwo[1] = #10000 1'b1;
	Stwo[1] = #10000 1'b0;
	Stwo[1] = #10000 1'b1;
	Stwo[1] = #10000 1'b0;
	Stwo[1] = #30000 1'b1;
	Stwo[1] = #10000 1'b0;
	Stwo[1] = #20000 1'b1;
	Stwo[1] = #30000 1'b0;
	Stwo[1] = #90000 1'b1;
	Stwo[1] = #10000 1'b0;
	Stwo[1] = #10000 1'b1;
	Stwo[1] = #20000 1'b0;
	Stwo[1] = #20000 1'b1;
	Stwo[1] = #20000 1'b0;
	Stwo[1] = #40000 1'b1;
	Stwo[1] = #10000 1'b0;
	Stwo[1] = #10000 1'b1;
	Stwo[1] = #40000 1'b0;
	Stwo[1] = #10000 1'b1;
	Stwo[1] = #50000 1'b0;
	Stwo[1] = #10000 1'b1;
end 
// Stwo[ 0 ]
initial
begin
	Stwo[0] = 1'b1;
	Stwo[0] = #20000 1'b0;
	Stwo[0] = #50000 1'b1;
	Stwo[0] = #50000 1'b0;
	Stwo[0] = #50000 1'b1;
	Stwo[0] = #50000 1'b0;
	Stwo[0] = #10000 1'b1;
	Stwo[0] = #50000 1'b0;
	Stwo[0] = #30000 1'b1;
	Stwo[0] = #10000 1'b0;
	Stwo[0] = #10000 1'b1;
	Stwo[0] = #10000 1'b0;
	Stwo[0] = #20000 1'b1;
	Stwo[0] = #20000 1'b0;
	Stwo[0] = #10000 1'b1;
	Stwo[0] = #20000 1'b0;
	Stwo[0] = #20000 1'b1;
	Stwo[0] = #20000 1'b0;
	Stwo[0] = #10000 1'b1;
	Stwo[0] = #10000 1'b0;
	Stwo[0] = #30000 1'b1;
	Stwo[0] = #10000 1'b0;
	Stwo[0] = #20000 1'b1;
	Stwo[0] = #90000 1'b0;
	Stwo[0] = #20000 1'b1;
	Stwo[0] = #10000 1'b0;
	Stwo[0] = #40000 1'b1;
	Stwo[0] = #20000 1'b0;
	Stwo[0] = #10000 1'b1;
	Stwo[0] = #10000 1'b0;
	Stwo[0] = #10000 1'b1;
	Stwo[0] = #20000 1'b0;
	Stwo[0] = #10000 1'b1;
	Stwo[0] = #30000 1'b0;
	Stwo[0] = #20000 1'b1;
	Stwo[0] = #10000 1'b0;
	Stwo[0] = #20000 1'b1;
	Stwo[0] = #10000 1'b0;
	Stwo[0] = #10000 1'b1;
	Stwo[0] = #20000 1'b0;
	Stwo[0] = #10000 1'b1;
	Stwo[0] = #10000 1'b0;
	Stwo[0] = #10000 1'b1;
	Stwo[0] = #10000 1'b0;
	Stwo[0] = #10000 1'b1;
	Stwo[0] = #40000 1'b0;
	Stwo[0] = #10000 1'b1;
end 
// V[ 3 ]
initial
begin
	V[3] = 1'b1;
	V[3] = #10000 1'b0;
	V[3] = #10000 1'b1;
	V[3] = #10000 1'b0;
	V[3] = #20000 1'b1;
	V[3] = #10000 1'b0;
	V[3] = #10000 1'b1;
	V[3] = #20000 1'b0;
	V[3] = #10000 1'b1;
	V[3] = #30000 1'b0;
	V[3] = #10000 1'b1;
	V[3] = #10000 1'b0;
	V[3] = #20000 1'b1;
	V[3] = #40000 1'b0;
	V[3] = #10000 1'b1;
	V[3] = #10000 1'b0;
	V[3] = #10000 1'b1;
	V[3] = #10000 1'b0;
	V[3] = #30000 1'b1;
	V[3] = #10000 1'b0;
	V[3] = #20000 1'b1;
	V[3] = #20000 1'b0;
	V[3] = #20000 1'b1;
	V[3] = #20000 1'b0;
	V[3] = #10000 1'b1;
	V[3] = #60000 1'b0;
	V[3] = #10000 1'b1;
	V[3] = #20000 1'b0;
	V[3] = #10000 1'b1;
	V[3] = #10000 1'b0;
	V[3] = #30000 1'b1;
	V[3] = #10000 1'b0;
	V[3] = #20000 1'b1;
	V[3] = #40000 1'b0;
	V[3] = #10000 1'b1;
	V[3] = #30000 1'b0;
	V[3] = #10000 1'b1;
	V[3] = #10000 1'b0;
	V[3] = #10000 1'b1;
	V[3] = #20000 1'b0;
	V[3] = #10000 1'b1;
	V[3] = #10000 1'b0;
	V[3] = #50000 1'b1;
	V[3] = #10000 1'b0;
	V[3] = #10000 1'b1;
	V[3] = #20000 1'b0;
	V[3] = #20000 1'b1;
	V[3] = #10000 1'b0;
	V[3] = #10000 1'b1;
	V[3] = #20000 1'b0;
	V[3] = #50000 1'b1;
	V[3] = #20000 1'b0;
	V[3] = #10000 1'b1;
	V[3] = #10000 1'b0;
	V[3] = #10000 1'b1;
	V[3] = #10000 1'b0;
	V[3] = #10000 1'b1;
	V[3] = #10000 1'b0;
	V[3] = #10000 1'b1;
end 
// V[ 2 ]
initial
begin
	V[2] = 1'b1;
	V[2] = #20000 1'b0;
	V[2] = #30000 1'b1;
	V[2] = #30000 1'b0;
	V[2] = #10000 1'b1;
	V[2] = #20000 1'b0;
	V[2] = #10000 1'b1;
	V[2] = #20000 1'b0;
	V[2] = #10000 1'b1;
	V[2] = #40000 1'b0;
	V[2] = #10000 1'b1;
	V[2] = #40000 1'b0;
	V[2] = #10000 1'b1;
	V[2] = #30000 1'b0;
	V[2] = #20000 1'b1;
	V[2] = #20000 1'b0;
	V[2] = #10000 1'b1;
	V[2] = #60000 1'b0;
	V[2] = #20000 1'b1;
	V[2] = #10000 1'b0;
	V[2] = #10000 1'b1;
	V[2] = #10000 1'b0;
	V[2] = #10000 1'b1;
	V[2] = #20000 1'b0;
	V[2] = #10000 1'b1;
	V[2] = #30000 1'b0;
	V[2] = #10000 1'b1;
	V[2] = #20000 1'b0;
	V[2] = #10000 1'b1;
	V[2] = #20000 1'b0;
	V[2] = #10000 1'b1;
	V[2] = #10000 1'b0;
	V[2] = #20000 1'b1;
	V[2] = #10000 1'b0;
	V[2] = #10000 1'b1;
	V[2] = #10000 1'b0;
	V[2] = #20000 1'b1;
	V[2] = #10000 1'b0;
	V[2] = #10000 1'b1;
	V[2] = #30000 1'b0;
	V[2] = #20000 1'b1;
	V[2] = #40000 1'b0;
	V[2] = #20000 1'b1;
	V[2] = #10000 1'b0;
	V[2] = #10000 1'b1;
	V[2] = #20000 1'b0;
	V[2] = #40000 1'b1;
	V[2] = #20000 1'b0;
	V[2] = #10000 1'b1;
	V[2] = #20000 1'b0;
	V[2] = #10000 1'b1;
	V[2] = #10000 1'b0;
	V[2] = #10000 1'b1;
	V[2] = #30000 1'b0;
	V[2] = #10000 1'b1;
end 
// V[ 1 ]
initial
begin
	V[1] = 1'b1;
	V[1] = #10000 1'b0;
	V[1] = #10000 1'b1;
	V[1] = #10000 1'b0;
	V[1] = #40000 1'b1;
	V[1] = #30000 1'b0;
	V[1] = #20000 1'b1;
	V[1] = #10000 1'b0;
	V[1] = #20000 1'b1;
	V[1] = #10000 1'b0;
	V[1] = #10000 1'b1;
	V[1] = #20000 1'b0;
	V[1] = #10000 1'b1;
	V[1] = #10000 1'b0;
	V[1] = #10000 1'b1;
	V[1] = #10000 1'b0;
	V[1] = #20000 1'b1;
	V[1] = #10000 1'b0;
	V[1] = #10000 1'b1;
	V[1] = #30000 1'b0;
	V[1] = #10000 1'b1;
	V[1] = #10000 1'b0;
	V[1] = #10000 1'b1;
	V[1] = #20000 1'b0;
	V[1] = #10000 1'b1;
	V[1] = #20000 1'b0;
	V[1] = #10000 1'b1;
	V[1] = #40000 1'b0;
	V[1] = #20000 1'b1;
	V[1] = #40000 1'b0;
	V[1] = #70000 1'b1;
	V[1] = #10000 1'b0;
	V[1] = #20000 1'b1;
	V[1] = #20000 1'b0;
	V[1] = #10000 1'b1;
	V[1] = #20000 1'b0;
	V[1] = #10000 1'b1;
	V[1] = #30000 1'b0;
	V[1] = #20000 1'b1;
	V[1] = #10000 1'b0;
	V[1] = #10000 1'b1;
	V[1] = #60000 1'b0;
	V[1] = #60000 1'b1;
	V[1] = #10000 1'b0;
	V[1] = #10000 1'b1;
	V[1] = #10000 1'b0;
	V[1] = #10000 1'b1;
	V[1] = #20000 1'b0;
	V[1] = #10000 1'b1;
	V[1] = #40000 1'b0;
	V[1] = #10000 1'b1;
	V[1] = #20000 1'b0;
	V[1] = #10000 1'b1;
end 
// V[ 0 ]
initial
begin
	V[0] = 1'b1;
	V[0] = #20000 1'b0;
	V[0] = #20000 1'b1;
	V[0] = #30000 1'b0;
	V[0] = #20000 1'b1;
	V[0] = #20000 1'b0;
	V[0] = #30000 1'b1;
	V[0] = #20000 1'b0;
	V[0] = #10000 1'b1;
	V[0] = #10000 1'b0;
	V[0] = #10000 1'b1;
	V[0] = #10000 1'b0;
	V[0] = #10000 1'b1;
	V[0] = #10000 1'b0;
	V[0] = #50000 1'b1;
	V[0] = #20000 1'b0;
	V[0] = #10000 1'b1;
	V[0] = #10000 1'b0;
	V[0] = #20000 1'b1;
	V[0] = #10000 1'b0;
	V[0] = #50000 1'b1;
	V[0] = #20000 1'b0;
	V[0] = #10000 1'b1;
	V[0] = #40000 1'b0;
	V[0] = #20000 1'b1;
	V[0] = #10000 1'b0;
	V[0] = #30000 1'b1;
	V[0] = #30000 1'b0;
	V[0] = #20000 1'b1;
	V[0] = #10000 1'b0;
	V[0] = #20000 1'b1;
	V[0] = #10000 1'b0;
	V[0] = #10000 1'b1;
	V[0] = #30000 1'b0;
	V[0] = #10000 1'b1;
	V[0] = #10000 1'b0;
	V[0] = #20000 1'b1;
	V[0] = #10000 1'b0;
	V[0] = #10000 1'b1;
	V[0] = #40000 1'b0;
	V[0] = #10000 1'b1;
	V[0] = #10000 1'b0;
	V[0] = #30000 1'b1;
	V[0] = #10000 1'b0;
	V[0] = #20000 1'b1;
	V[0] = #10000 1'b0;
	V[0] = #10000 1'b1;
	V[0] = #20000 1'b0;
	V[0] = #10000 1'b1;
	V[0] = #30000 1'b0;
	V[0] = #10000 1'b1;
	V[0] = #10000 1'b0;
	V[0] = #10000 1'b1;
	V[0] = #40000 1'b0;
	V[0] = #10000 1'b1;
end 
endmodule

