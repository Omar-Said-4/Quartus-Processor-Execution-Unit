// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "10/17/2022 22:47:08"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Decoder
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Decoder_vlg_vec_tst();
// constants                                           
// general purpose registers
reg IA;
reg IB;
// wires                                               
wire DA;
wire DB;
wire DC;
wire DD;

// assign statements (if any)                          
Decoder i1 (
// port map - connection between master ports and signals/registers   
	.DA(DA),
	.DB(DB),
	.DC(DC),
	.DD(DD),
	.IA(IA),
	.IB(IB)
);
initial 
begin 
#1000000 $finish;
end 

// IA
initial
begin
	IA = 1'b0;
	IA = #5000 1'b1;
	IA = #10000 1'b0;
	IA = #5000 1'b1;
	IA = #10000 1'b0;
	IA = #30000 1'b1;
	IA = #15000 1'b0;
	IA = #5000 1'b1;
	IA = #5000 1'b0;
	IA = #5000 1'b1;
	IA = #10000 1'b0;
	IA = #15000 1'b1;
	IA = #35000 1'b0;
	IA = #10000 1'b1;
	IA = #5000 1'b0;
	IA = #5000 1'b1;
	IA = #5000 1'b0;
	IA = #5000 1'b1;
	IA = #15000 1'b0;
	IA = #20000 1'b1;
	IA = #35000 1'b0;
	IA = #5000 1'b1;
	IA = #5000 1'b0;
	IA = #15000 1'b1;
	IA = #5000 1'b0;
	IA = #35000 1'b1;
	IA = #5000 1'b0;
	IA = #15000 1'b1;
	IA = #5000 1'b0;
	IA = #5000 1'b1;
	IA = #5000 1'b0;
	IA = #15000 1'b1;
	IA = #5000 1'b0;
	IA = #5000 1'b1;
	IA = #10000 1'b0;
	IA = #5000 1'b1;
	IA = #10000 1'b0;
	IA = #5000 1'b1;
	IA = #25000 1'b0;
	IA = #10000 1'b1;
	IA = #5000 1'b0;
	IA = #20000 1'b1;
	IA = #15000 1'b0;
	IA = #15000 1'b1;
	IA = #10000 1'b0;
	IA = #5000 1'b1;
	IA = #50000 1'b0;
	IA = #10000 1'b1;
	IA = #20000 1'b0;
	IA = #5000 1'b1;
	IA = #5000 1'b0;
	IA = #15000 1'b1;
	IA = #5000 1'b0;
	IA = #10000 1'b1;
	IA = #5000 1'b0;
	IA = #5000 1'b1;
	IA = #5000 1'b0;
	IA = #5000 1'b1;
	IA = #5000 1'b0;
	IA = #5000 1'b1;
	IA = #10000 1'b0;
	IA = #15000 1'b1;
	IA = #5000 1'b0;
	IA = #10000 1'b1;
	IA = #5000 1'b0;
	IA = #5000 1'b1;
	IA = #5000 1'b0;
	IA = #10000 1'b1;
	IA = #10000 1'b0;
	IA = #5000 1'b1;
	IA = #5000 1'b0;
	IA = #10000 1'b1;
	IA = #10000 1'b0;
	IA = #5000 1'b1;
	IA = #5000 1'b0;
	IA = #20000 1'b1;
	IA = #5000 1'b0;
	IA = #5000 1'b1;
	IA = #15000 1'b0;
	IA = #5000 1'b1;
	IA = #5000 1'b0;
	IA = #5000 1'b1;
	IA = #5000 1'b0;
	IA = #5000 1'b1;
	IA = #35000 1'b0;
	IA = #10000 1'b1;
	IA = #5000 1'b0;
	IA = #5000 1'b1;
	IA = #5000 1'b0;
	IA = #5000 1'b1;
	IA = #15000 1'b0;
	IA = #5000 1'b1;
	IA = #10000 1'b0;
	IA = #5000 1'b1;
	IA = #5000 1'b0;
	IA = #5000 1'b1;
	IA = #5000 1'b0;
	IA = #5000 1'b1;
	IA = #20000 1'b0;
	IA = #5000 1'b1;
	IA = #5000 1'b0;
end 

// IB
initial
begin
	IB = 1'b0;
	IB = #11 1'b1;
	IB = #5600 1'b0;
	IB = #4400 1'b1;
	IB = #5600 1'b0;
	IB = #4389 1'b1;
	IB = #1392 1'b0;
	IB = #3100 1'b1;
	IB = #1900 1'b0;
	IB = #3100 1'b1;
	IB = #1373 1'b0;
	IB = #2200 1'b1;
	IB = #1133 1'b0;
	IB = #2200 1'b1;
	IB = #1133 1'b0;
	IB = #2200 1'b1;
	IB = #269 1'b0;
	IB = #815 1'b1;
	# 1099;
	repeat(2)
	begin
		IB = 1'b0;
		IB = #2234 1'b1;
		# 1099;
	end
	IB = 1'b0;
	IB = #1438 1'b1;
	IB = #2450 1'b0;
	IB = #2550 1'b1;
	IB = #2450 1'b0;
	IB = #5548 1'b1;
	IB = #4200 1'b0;
	IB = #2784 1'b1;
	IB = #2813 1'b0;
	IB = #4000 1'b1;
	IB = #3187 1'b0;
	IB = #1470 1'b1;
	IB = #3700 1'b0;
	IB = #6300 1'b1;
	IB = #3700 1'b0;
	IB = #4830 1'b1;
	IB = #832 1'b0;
	IB = #2450 1'b1;
	IB = #2550 1'b0;
	IB = #2450 1'b1;
	IB = #4241 1'b0;
	IB = #4133 1'b1;
	IB = #2533 1'b0;
	IB = #4133 1'b1;
	IB = #2533 1'b0;
	IB = #4133 1'b1;
	IB = #441 1'b0;
	IB = #2700 1'b1;
	IB = #2300 1'b0;
	IB = #2700 1'b1;
	IB = #1871 1'b0;
	IB = #2906 1'b1;
	# 3732;
	repeat(2)
	begin
		IB = 1'b0;
		IB = #2934 1'b1;
		# 3732;
	end
	IB = 1'b0;
	IB = #317 1'b1;
	# 1499;
	repeat(2)
	begin
		IB = 1'b0;
		IB = #1834 1'b1;
		# 1499;
	end
	IB = 1'b0;
	IB = #1548 1'b1;
	IB = #1503 1'b0;
	IB = #5300 1'b1;
	IB = #4700 1'b0;
	IB = #5300 1'b1;
	IB = #4496 1'b0;
	IB = #6800 1'b1;
	IB = #1901 1'b0;
	IB = #1570 1'b1;
	IB = #3900 1'b0;
	IB = #6100 1'b1;
	IB = #3900 1'b0;
	IB = #4530 1'b1;
	IB = #1714 1'b0;
	IB = #3050 1'b1;
	IB = #1950 1'b0;
	IB = #3050 1'b1;
	IB = #1157 1'b0;
	IB = #1967 1'b1;
	IB = #1366 1'b0;
	IB = #1967 1'b1;
	IB = #1366 1'b0;
	IB = #1967 1'b1;
	IB = #446 1'b0;
	IB = #5291 1'b1;
	IB = #6600 1'b0;
	IB = #8109 1'b1;
	# 822;
	repeat(2)
	begin
		IB = 1'b0;
		IB = #2267 1'b1;
		# 1066;
	end
	IB = 1'b0;
	IB = #2267 1'b1;
	IB = #2000 1'b0;
	IB = #4067 1'b1;
	IB = #2599 1'b0;
	IB = #4067 1'b1;
	IB = #2599 1'b0;
	IB = #4067 1'b1;
	IB = #846 1'b0;
	IB = #2910 1'b1;
	# 2599;
	repeat(2)
	begin
		IB = 1'b0;
		IB = #4067 1'b1;
		# 2599;
	end
	IB = 1'b0;
	IB = #2523 1'b1;
	IB = #5600 1'b0;
	IB = #4266 1'b1;
	IB = #3900 1'b0;
	IB = #5681 1'b1;
	# 1266;
	repeat(2)
	begin
		IB = 1'b0;
		IB = #2067 1'b1;
		# 1266;
	end
	IB = 1'b0;
	IB = #1257 1'b1;
	IB = #769 1'b0;
	IB = #2850 1'b1;
	IB = #2150 1'b0;
	IB = #2850 1'b1;
	IB = #1381 1'b0;
	IB = #2511 1'b1;
	# 2533;
	repeat(2)
	begin
		IB = 1'b0;
		IB = #4133 1'b1;
		# 2533;
	end
	IB = 1'b0;
	IB = #1624 1'b1;
	IB = #1231 1'b0;
	IB = #2750 1'b1;
	IB = #2250 1'b0;
	IB = #2750 1'b1;
	IB = #1019 1'b0;
	IB = #3874 1'b1;
	IB = #4700 1'b0;
	IB = #1426 1'b1;
	IB = #1755 1'b0;
	IB = #6700 1'b1;
	IB = #3300 1'b0;
	IB = #6700 1'b1;
	IB = #2139 1'b0;
	IB = #2800 1'b1;
	IB = #2200 1'b0;
	IB = #2800 1'b1;
	IB = #2279 1'b0;
	IB = #4333 1'b1;
	IB = #2333 1'b0;
	IB = #4333 1'b1;
	IB = #2333 1'b0;
	IB = #4333 1'b1;
	IB = #1662 1'b0;
	IB = #1146 1'b1;
	IB = #3800 1'b0;
	IB = #5054 1'b1;
	IB = #3549 1'b0;
	IB = #12800 1'b1;
	IB = #4236 1'b0;
	IB = #2267 1'b1;
	IB = #1066 1'b0;
	IB = #2267 1'b1;
	IB = #1066 1'b0;
	IB = #2267 1'b1;
	IB = #1290 1'b0;
	IB = #10200 1'b1;
	IB = #8992 1'b0;
	IB = #1129 1'b1;
	IB = #2650 1'b0;
	IB = #2350 1'b1;
	IB = #2650 1'b0;
	IB = #1221 1'b1;
	IB = #1751 1'b0;
	IB = #5800 1'b1;
	IB = #2449 1'b0;
	IB = #2333 1'b1;
	IB = #1550 1'b0;
	IB = #3450 1'b1;
	IB = #1550 1'b0;
	IB = #1117 1'b1;
	IB = #1446 1'b0;
	IB = #5000 1'b1;
	IB = #5000 1'b0;
	IB = #5000 1'b1;
	IB = #6129 1'b0;
	IB = #6500 1'b1;
	IB = #3500 1'b0;
	IB = #6500 1'b1;
	IB = #2237 1'b0;
	IB = #1634 1'b1;
	IB = #1699 1'b0;
	IB = #1634 1'b1;
	IB = #1699 1'b0;
	IB = #1634 1'b1;
	IB = #2133 1'b0;
	IB = #4333 1'b1;
	IB = #2333 1'b0;
	IB = #4333 1'b1;
	IB = #2333 1'b0;
	IB = #4333 1'b1;
	IB = #2011 1'b0;
	IB = #1834 1'b1;
	IB = #1499 1'b0;
	IB = #1834 1'b1;
	IB = #1499 1'b0;
	IB = #1834 1'b1;
	IB = #79 1'b0;
	IB = #3390 1'b1;
	IB = #5300 1'b0;
	IB = #1310 1'b1;
	IB = #3682 1'b0;
	IB = #6000 1'b1;
	IB = #318 1'b0;
	IB = #315 1'b1;
	# 3532;
	repeat(2)
	begin
		IB = 1'b0;
		IB = #3134 1'b1;
		# 3532;
	end
	IB = 1'b0;
	IB = #7626 1'b1;
	IB = #7600 1'b0;
	IB = #8967 1'b1;
	IB = #1750 1'b0;
	IB = #3250 1'b1;
	IB = #1750 1'b0;
	IB = #2444 1'b1;
	IB = #3400 1'b0;
	IB = #6034 1'b1;
	IB = #2654 1'b0;
	IB = #12600 1'b1;
	IB = #6411 1'b0;
	IB = #3200 1'b1;
	IB = #3466 1'b0;
	IB = #3200 1'b1;
	IB = #3466 1'b0;
	IB = #3200 1'b1;
	IB = #3950 1'b0;
	IB = #5400 1'b1;
	IB = #4600 1'b0;
	IB = #5400 1'b1;
	IB = #3282 1'b0;
	IB = #1367 1'b1;
	IB = #1966 1'b0;
	IB = #1367 1'b1;
	IB = #1966 1'b0;
	IB = #1367 1'b1;
	IB = #4517 1'b0;
	IB = #10400 1'b1;
	IB = #6221 1'b0;
	IB = #1816 1'b1;
	IB = #1750 1'b0;
	IB = #3250 1'b1;
	IB = #1750 1'b0;
	IB = #1434 1'b1;
	IB = #35 1'b0;
	IB = #2900 1'b1;
	IB = #2100 1'b0;
	IB = #2900 1'b1;
	IB = #2065 1'b0;
	IB = #1897 1'b1;
	# 1233;
	repeat(2)
	begin
		IB = 1'b0;
		IB = #2100 1'b1;
		# 1233;
	end
	IB = 1'b0;
	IB = #3576 1'b1;
	# 2733;
	repeat(2)
	begin
		IB = 1'b0;
		IB = #3933 1'b1;
		# 2733;
	end
	IB = 1'b0;
	IB = #1276 1'b1;
	IB = #7800 1'b0;
	IB = #14253 1'b1;
	IB = #5600 1'b0;
	IB = #4400 1'b1;
	IB = #5600 1'b0;
	IB = #1897 1'b1;
	# 1233;
	repeat(2)
	begin
		IB = 1'b0;
		IB = #2100 1'b1;
		# 1233;
	end
	IB = 1'b0;
	IB = #7695 1'b1;
	IB = #8200 1'b0;
	IB = #5943 1'b1;
	IB = #544 1'b0;
	IB = #6400 1'b1;
	IB = #3600 1'b0;
	IB = #6400 1'b1;
	IB = #3056 1'b0;
	IB = #3206 1'b1;
	IB = #1700 1'b0;
	IB = #3300 1'b1;
	IB = #1700 1'b0;
	IB = #4370 1'b1;
	IB = #6200 1'b0;
	IB = #9524 1'b1;
	# 764;
	repeat(2)
	begin
		IB = 1'b0;
		IB = #1767 1'b1;
		# 1566;
	end
	IB = 1'b0;
	IB = #1767 1'b1;
	IB = #803 1'b0;
	IB = #1294 1'b1;
	IB = #1600 1'b0;
	IB = #3400 1'b1;
	IB = #1600 1'b0;
	IB = #2106 1'b1;
	IB = #4619 1'b0;
	IB = #13800 1'b1;
	IB = #3948 1'b0;
	IB = #6500 1'b1;
end 
endmodule

